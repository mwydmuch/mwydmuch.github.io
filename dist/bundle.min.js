/*!
 * mwydmuch.pl v14
 * Copyright 2023 Marek Wydmuch
 */

!function s(a,r,h){function n(i,t){if(!r[i]){if(!a[i]){var e="function"==typeof require&&require;if(!t&&e)return e(i,!0);if(o)return o(i,!0);throw new Error("Cannot find module '"+i+"'")}t=r[i]={exports:{}};a[i][0].call(t.exports,function(t){var e=a[i][1][t];return n(e||t)},t,t.exports,s,a,r,h)}return r[i].exports}for(var o="function"==typeof require&&require,t=0;t<h.length;t++)n(h[t]);return n}({1:[function(t,e,i){"use strict";class s extends t("./animation"){constructor(t,e,i,s=30,a=8,r=-20,h=!1,n=1){super(t,e,i,"3n + 1 (Collatz Conjecture) visualization","3n+1.js",`
3n + 1 (Collatz Conjecture) visualization.
Inspired by Veritasium video: 
https://www.youtube.com/watch?v=094y1Z2wpJg

Coded with no external dependencies, using only canvas API.
`),this.length=s,this.evenAngle=a,this.oddAngle=r,this.scale=n,this.drawNumbers=h,this.seqences=[]}generateNextSequence(){let t=this.seqences.length+1,e=[t];for(;1!==t;)t%2?t=3*t+1:t/=2,e.push(t),t<this.seqences.length&&(this.seqences[t-1]=null);this.seqences.push(e)}update(t){for(let t=0;t<this.speed;++t)this.generateNextSequence()}drawSequence(a){if(null!==a){let e=0,i=0,s=270*Math.PI/180;var t=this.colors[this.frame%this.colors.length];this.ctx.strokeStyle=t,this.ctx.lineWidth=2,this.ctx.font="12px sans-serif",this.ctx.fillStyle=t,this.ctx.beginPath(),this.ctx.moveTo(e,i);for(let t=a.length-2;0<=t;--t){var r,h,n=a[t];s+=n%2?this.oddAngleRad:this.evenAngleRad,this.drawNumbers?(r=Math.cos(s),h=Math.sin(s),e+=this.length/2*r,i+=this.length/2*h,this.ctx.fillText(n,e+10,i),e+=this.length/2*r,i+=this.length/2*h):(e+=this.length*Math.cos(s),i+=this.length*Math.sin(s)),this.ctx.lineTo(e,i)}this.ctx.stroke()}}draw(){for(this.evenAngleRad=this.evenAngle*Math.PI/180,this.oddAngleRad=this.oddAngle*Math.PI/180,this.ctx.translate(this.ctx.canvas.width/2,this.ctx.canvas.height),this.ctx.scale(this.scale,this.scale);this.frame<this.seqences.length;)this.drawSequence(this.seqences[this.frame]),++this.frame;this.ctx.resetTransform()}resize(){this.frame=0,this.clear()}restart(){this.seqences=[],super.restart()}getSettings(){return[{prop:"length",type:"int",min:1,max:100,toCall:"resize"},{prop:"evenAngle",type:"int",min:-45,max:45,toCall:"resize"},{prop:"oddAngle",type:"int",min:-45,max:45,toCall:"resize"},{prop:"speed",type:"int",min:1,max:16},{prop:"drawNumbers",type:"bool",toCall:"resize"},{prop:"scale",type:"float",min:.05,max:1.95,toCall:"resize"}]}}e.exports=s},{"./animation":2}],2:[function(t,e,i){"use strict";const s=t("./utils");e.exports=class{constructor(t,e,i,s="",a="",r=""){this.ctx=t.getContext("2d",{alpha:!1}),this.bgColor="#FFFFFF",this.colors=e,this.colorsAlt=i,this.colorA=e[0],this.colorB=e[3],this.name=s,this.file=a,this.description=r,this.time=0,this.frame=0,this.speed=1,this.fps=30,this.ctx.font="14px sans-serif",this.ctx.textAlign="left",this.ctx.textBaseline="alphabetic",this.debug=!1}assignIfRandom(t,e){return"random"===t?e:t}clear(){s.clear(this.ctx,this.bgColor)}fadeOut(t){t<=.001&&this.frame%10==0?s.blendColor(this.ctx,this.bgColor,10*t,"lighter"):t<=.005&&this.frame%2==0?s.blendColor(this.ctx,this.bgColor,2*t,"lighter"):s.blendColor(this.ctx,this.bgColor,t,"lighter")}getFPS(){return this.fps}getName(){return this.name}getCodeUrl(){return"https://github.com/mwydmuch/mwydmuch.github.io/blob/master/src/"+this.file}getDescription(){return this.description}update(t){this.time+=t/1e3*this.speed,++this.frame}resize(){}restart(){this.time=0,this.frame=0,this.resize()}getSettings(){return[]}mouseAction(t){}}},{"./utils":25}],3:[function(t,e,i){"use strict";var s=t("./animation");const a=t("./utils");class r extends s{constructor(t,e,i,s=400,a=1,r=.05,h=!1){super(t,e,i,"cardioids with a pencil of lines","cardioids.js",`
Modified method of L. Cremona for drawing cardioid with a pencil of lines,
as described in section "cardioid as envelope of a pencil of lines" of:
https://en.wikipedia.org/wiki/Cardioid

Here the shift of the second point is determined by time passed
from the beginning of the animation.

Coded with no external dependencies, using only canvas API.
`),this.lines=s,this.scale=a,this.speed=r,this.rainbowColors=h,this.radius=0}getVec(t){t=a.remap(t,0,this.lines,0,2*Math.PI);return a.rotateVec2d(a.createVec2d(this.radius,0),Math.PI+t)}draw(){this.clear(),this.radius=Math.max(this.ctx.canvas.width,this.ctx.canvas.height)/3*this.scale,this.ctx.translate(this.ctx.canvas.width/2,this.ctx.canvas.height/2),a.strokeCircle(this.ctx,0,0,this.radius,this.colors[0]);for(let e=0;e<=this.lines;++e){var i=this.getVec(e),s=this.getVec(e*this.time);let t;t=this.rainbowColors?"hsl("+e/this.lines*360+", 100%, 75%)":a.lerpColorsPallet([this.colorA,this.colorB,this.colorA],e/this.lines),a.drawLine(this.ctx,i.x,i.y,s.x,s.y,t,1)}this.ctx.resetTransform()}getSettings(){return[{prop:"lines",type:"int",min:1,max:2500},{prop:"speed",type:"float",min:-1,max:1},{prop:"scale",type:"float",min:.25,max:1.75},{prop:"rainbowColors",type:"bool"}]}}e.exports=r},{"./animation":2,"./utils":25}],4:[function(t,e,i){"use strict";var s=t("./animation");const l=t("./noise"),c=t("./utils");class a extends s{constructor(t,e,i,s=180,a=.5,r=.4,h=1.2,n=.001,o=!1){super(t,e,i,"circular waves","circular-waves.js",`
Circular waves animation.

Coded with no external dependencies, using only canvas API.
`),this.noise=l.noise,this.noise.seed(c.randomRange(0,1)),this.vertices=s,this.noiseScale=a,this.radiusScaleMin=r,this.radiusScaleMax=h,this.fadingSpeed=n,this.rainbowColors=o,this.radiusMin=0,this.radiusMax=0}draw(){this.fadeOut(this.fadingSpeed);var e=.005*this.frame,i=2*Math.PI/this.vertices;this.rainbowColors?this.ctx.strokeStyle="hsl("+360*Math.abs(Math.sin(5*e))+", 100%, 50%)":this.ctx.strokeStyle=c.lerpColor(this.colorA,this.colorB,Math.abs(Math.sin(5*e))),this.ctx.translate(this.ctx.canvas.width/2,this.ctx.canvas.height/2),this.ctx.beginPath();for(let t=0;t<=this.vertices;++t){var s=t*i,a=Math.cos(s)*this.noiseScale,r=Math.sin(s)*this.noiseScale,a=this.noise.simplex3(a,r,e),r=c.remap(a,-1,1,this.radiusMin,this.radiusMax),a=r*Math.cos(s),r=r*Math.sin(s);0===t?this.ctx.moveTo(a,r):this.ctx.lineTo(a,r)}this.ctx.stroke(),this.ctx.resetTransform()}resize(){this.radiusMin=Math.min(this.ctx.canvas.width,this.ctx.canvas.height)/2*this.radiusScaleMin,this.radiusMax=Math.max(this.ctx.canvas.width,this.ctx.canvas.height)/2*this.radiusScaleMax,this.radiusMin>this.radiusMax&&([this.radiusMin,this.radiusMax]=[this.radiusMax,this.radiusMin]),this.clear()}getSettings(){return[{prop:"vertices",type:"int",min:3,max:720,toCall:"resize"},{prop:"radiusScaleMin",type:"float",min:0,max:2,toCall:"resize"},{prop:"radiusScaleMax",type:"float",min:0,max:2,toCall:"resize"},{prop:"noiseScale",type:"float",min:0,max:2,toCall:"resize"},{prop:"fadingSpeed",type:"float",step:.001,min:0,max:.1},{prop:"rainbowColors",type:"bool"}]}}e.exports=a},{"./animation":2,"./noise":13,"./utils":25}],5:[function(t,e,i){"use strict";var S;function M(t,e,i,s){var a,r,h,n,o,l,c,d=t[e][0],p=t[e][1],m=t[i][0],u=t[i][1],g=t[s][0],t=t[s][1],f=Math.abs(p-u),x=Math.abs(u-t);if(f<S&&x<S)throw new Error("Eek! Coincident points!");return d=f<S?(h=-(g-m)/(t-u))*((a=(m+d)/2)-(o=(m+g)/2))+(c=(u+t)/2):x<S?(r=-(m-d)/(u-p))*((a=(g+m)/2)-(n=(d+m)/2))+(l=(p+u)/2):(a=((r=-(m-d)/(u-p))*(n=(d+m)/2)-(h=-(g-m)/(t-u))*(o=(m+g)/2)+(c=(u+t)/2)-(l=(p+u)/2))/(r-h),x<f?r*(a-n)+l:h*(a-o)+c),{i:e,j:i,k:s,x:a,y:d,r:(g=m-a)*g+(t=u-d)*t}}S=1/1048576,void 0!==e&&(e.exports={triangulate:function(s,t){var e,i,a,r,h,n,o,l,c,d,p,m=s.length;if(m<3)return[];if(s=s.slice(0),t)for(e=m;e--;)s[e]=s[e][t];for(a=new Array(m),e=m;e--;)a[e]=e;for(a.sort(function(t,e){var i=s[e][0]-s[t][0];return 0!=i?i:t-e}),r=function(t){for(var e,i,s,a=Number.POSITIVE_INFINITY,r=Number.POSITIVE_INFINITY,h=Number.NEGATIVE_INFINITY,n=Number.NEGATIVE_INFINITY,o=t.length;o--;)t[o][0]<a&&(a=t[o][0]),t[o][0]>h&&(h=t[o][0]),t[o][1]<r&&(r=t[o][1]),t[o][1]>n&&(n=t[o][1]);return s=n-r,[[(i=a+.5*(e=h-a))-20*(e=Math.max(e,s)),(s=r+.5*s)-e],[i,s+20*e],[i+20*e,s-e]]}(s),s.push(r[0],r[1],r[2]),h=[M(s,m+0,m+1,m+2)],n=[],o=[],e=a.length;e--;o.length=0){for(p=a[e],i=h.length;i--;)0<(l=s[p][0]-h[i].x)&&l*l>h[i].r?(n.push(h[i]),h.splice(i,1)):l*l+(l=s[p][1]-h[i].y)*l-h[i].r>S||(o.push(h[i].i,h[i].j,h[i].j,h[i].k,h[i].k,h[i].i),h.splice(i,1));v=x=f=g=w=u=y=void 0;for(var u,g,f,x,v,y=o,w=y.length;w;)for(f=y[--w],g=y[--w],u=w;u;)if(v=y[--u],g===(x=y[--u])&&f===v||g===v&&f===x){y.splice(w,2),y.splice(u,2);break}for(i=o.length;i;)d=o[--i],c=o[--i],h.push(M(s,c,d,p))}for(e=h.length;e--;)n.push(h[e]);for(h.length=0,e=n.length;e--;)n[e].i<m&&n[e].j<m&&n[e].k<m&&h.push(n[e].i,n[e].j,n[e].k);return h},contains:function(t,e){var i,s,a,r,h;return e[0]<t[0][0]&&e[0]<t[1][0]&&e[0]<t[2][0]||e[0]>t[0][0]&&e[0]>t[1][0]&&e[0]>t[2][0]||e[1]<t[0][1]&&e[1]<t[1][1]&&e[1]<t[2][1]||e[1]>t[0][1]&&e[1]>t[1][1]&&e[1]>t[2][1]||(i=t[1][0]-t[0][0],h=t[2][0]-t[0][0],s=t[1][1]-t[0][1],0==(a=i*(r=t[2][1]-t[0][1])-h*s))||(r=(r*(e[0]-t[0][0])-h*(e[1]-t[0][1]))/a,h=(i*(e[1]-t[0][1])-s*(e[0]-t[0][0]))/a,r<0)||h<0||1<r+h?null:[r,h]}})},{}],6:[function(t,e,i){"use strict";var s=t("./game-of-life");const c=t("./utils");class a extends s{constructor(t,e,i,s=14,a=0,r=.5,h=!0,n=!0,o=!0){super(t,e,i,s,a,r,o),this.name="isometric Conway's game of life",this.file="game-of-life-isometric.js",this.description=`
Conway's game of life visualization with isometric rendering.
Cells that "died" in the previous step keep their color to achieve a stable image
since flickering is not good for a background image.

Coded with no external dependencies, using only canvas API.
`,this.fadeDeadCells=h,this.drawCellsGrid=n,this.sqrt3=Math.sqrt(3),this.xShift=this.cellSize*this.sqrt3/2,this.yShift=this.cellSize/2,this.renderedGrid=null,this.renderedCubes=[];var l=c.createOffscreenCanvas(4*this.xShift,4*this.yShift).getContext("2d");this.drawIsoCube(l,0,3*this.yShift,!0,!0,this.colors,0,this.cellSize),this.renderedCubes.push(l.canvas);for(let t=1;t<this.cellSize;++t)l=c.createOffscreenCanvas(4*this.xShift,4*this.yShift).getContext("2d"),this.drawIsoCube(l,0,3*this.yShift,!0,!0,this.colorsAlt,-t,this.cellSize),this.renderedCubes.push(l.canvas)}drawIsoCube(t,e,i,s,a,r,h,n){var o=n*this.sqrt3/2,n=n/2;h*=-1,t.strokeStyle=r[0],t.fillStyle=r[3],t.beginPath(),c.pathClosedShape(t,[[e,i-2*n+h],[e+o,i-n+h],[e+2*o,i-2*n+h],[e+o,i-3*n+h]]),t.fill(),t.stroke(),s&&(t.fillStyle=r[2],t.beginPath(),c.pathClosedShape(t,[[e,i],[e+o,i+n],[e+o,i-n+h],[e,i-2*n+h]]),t.fill(),t.stroke()),a&&(t.fillStyle=r[1],t.beginPath(),c.pathClosedShape(t,[[e+o,i+n],[e+2*o,i],[e+2*o,i-2*n+h],[e+o,i-n+h]]),t.fill(),t.stroke())}drawCube(t,e,i,s=0,a=0){var r=t*this.xShift-e*this.xShift,h=(t+e+1)*this.yShift;this.drawIsoCube(this.ctx,r,h,!this.isAlive(t,e+1),!this.isAlive(t+1,e),i,s,this.cellSize-2*a)}drawGrid(e,i,s){var a=this.gridHeight*-this.xShift,r=this.gridHeight*this.yShift,h=this.gridWidth*this.xShift,n=this.gridWidth*this.yShift,t=(-this.gridHeight+this.gridWidth)*this.xShift,o=(this.gridHeight+this.gridWidth)*this.yShift,l=this.colors[0];for(let t=0;t<this.gridHeight;++t){const i=t*-this.xShift,s=t*this.yShift;c.drawLine(e,i,s,i+h,s+n,l),c.drawLine(e,-i,s,-i+a,s+r,l)}c.drawLine(e,0,0,h,n,l,3),c.drawLine(e,0,0,a,r,l,3),c.drawLine(e,a,r,t,o,l,3),c.drawLine(e,h,n,t,o,l,3)}drawPrerenderedCube(t,e,i){var s=t*this.xShift-e*this.xShift,t=(t+e+1)*this.yShift;this.ctx.drawImage(this.renderedCubes[i],s-+this.xShift,t-3*this.yShift)}draw(){var t;this.clear(),this.drawCellsGrid&&(this.renderedGrid||((t=c.createOffscreenCanvas(this.ctx.canvas.width,this.ctx.canvas.height).getContext("2d")).translate(this.ctx.canvas.width/2,1/8*this.ctx.canvas.height),this.drawGrid(t,0,0),this.renderedGrid=t.canvas),this.ctx.drawImage(this.renderedGrid,0,0)),this.ctx.translate(this.ctx.canvas.width/2,1/8*this.ctx.canvas.height);for(let e=0;e<this.gridHeight;++e)for(let t=0;t<this.gridWidth;++t){var i=this.getVal(t,e);this.fadeDeadCells&&i>-(this.cellSize-2*this.cellBasePadding)?this.drawPrerenderedCube(t,e,Math.max(0,-i)):0<i&&this.drawPrerenderedCube(t,e,0)}this.ctx.resetTransform()}resize(){var t=Math.ceil(.75*this.ctx.canvas.height/this.cellSize);this.resizeGrid(t,t),this.renderedGrid=null}getSettings(){return[{prop:"loopGrid",type:"bool"},{prop:"fadeDeadCells",type:"bool"},{prop:"drawCellsGrid",type:"bool"}]}}e.exports=a},{"./game-of-life":7,"./utils":25}],7:[function(t,e,i){"use strict";var s=t("./animation");const l=t("./utils");class a extends s{constructor(t,e,i,s=12,a=1,r=.5,h=!0,n="random",o=5){super(t,e,i,"Conway's game of life","game-of-life.js",`
Conway's game of life visualization.
Cells that "died" in the previous step keep their color to achieve a stable image
since flickering is not good for a background image.
Game of life is one of the first programs I wrote in my life.

Coded with no external dependencies, using only canvas API.
`),this.cellSize=s,this.cellBasePadding=a,this.spawnProb=r,this.cellStyles=["square","circle"],this.cellStyle=this.assignIfRandom(n,l.randomChoice(this.cellStyles)),this.deadCellsFadingSteps=o,this.loopGrid=h,this.gridWidth=0,this.gridHeight=0,this.grid=null,this.gridNextState=null}getIdx(t,e){return t+e*this.gridWidth}getVal(t,e){return this.grid[this.getIdx(t,e)]}isAlive(t,e){return this.loopGrid?1<=this.getVal(t%this.gridWidth,e%this.gridHeight)?1:0:!(t<0||t>=this.gridWidth||e<0||e>=this.gridHeight)&&1<=this.getVal(t,e)?1:0}update(t){for(let e=0;e<this.gridHeight;++e)for(let t=0;t<this.gridWidth;++t){var i=this.isAlive(t-1,e-1)+this.isAlive(t,e-1)+this.isAlive(t+1,e-1)+this.isAlive(t-1,e)+this.isAlive(t+1,e)+this.isAlive(t-1,e+1)+this.isAlive(t,e+1)+this.isAlive(t+1,e+1),s=this.getIdx(t,e);2===i&&1<=this.grid[s]?this.gridNextState[s]=this.grid[s]+1:this.gridNextState[s]=3===i?Math.max(1,this.grid[s]+1):Math.min(0,this.grid[s]-1)}[this.grid,this.gridNextState]=[this.gridNextState,this.grid]}drawSquareCell(t,e,i){this.ctx.fillRect(t*this.cellSize+i,e*this.cellSize+i,this.cellSize-2*i,this.cellSize-2*i)}drawCircleCell(t,e,i){this.ctx.beginPath(),this.ctx.arc(t*this.cellSize+this.cellSize/2,e*this.cellSize+this.cellSize/2,this.cellSize/2-i,0,2*Math.PI,!1),this.ctx.fill()}draw(){this.clear(),"square"===this.cellStyle?this.drawCell=this.drawSquareCell:this.drawCell=this.drawCircleCell;var r=(this.cellSize/2-this.cellBasePadding)/(this.deadCellsFadingSteps+1);for(let a=0;a<this.gridHeight;++a)for(let t=0;t<this.gridWidth;++t){var h=this.getVal(t,a);let e=this.cellBasePadding,i=null,s=-1;if(0<h)i=this.colors[0];else for(let t=0;t<this.deadCellsFadingSteps;++t){if(h>s){i=this.colors[Math.min(t,this.colors.length-1)],e+=t*r;break}s*=2}i&&(this.ctx.fillStyle=i,this.drawCell(t,a,e))}}resizeGrid(i,t){var s=new Array(i*t);for(let e=0;e<t;e++)for(let t=0;t<i;t++){var a=t+e*i;t<this.gridWidth&&e<this.gridHeight?s[a]=this.grid[this.getIdx(t,e)]:s[a]=Math.random()<this.spawnProb?1:-99999}this.grid=s,this.gridNextState=[...this.grid],this.gridWidth=i,this.gridHeight=t}resize(){var t=Math.ceil(this.ctx.canvas.width/this.cellSize),e=Math.ceil(this.ctx.canvas.height/this.cellSize);this.resizeGrid(t,e)}restart(){this.gridWidth=0,this.gridHeight=0,super.restart()}getSettings(){return[{prop:"loopGrid",type:"bool"},{prop:"cellSize",type:"int",min:4,max:32,toCall:"resize"},{prop:"cellStyle",type:"select",values:this.cellStyles},{prop:"deadCellsFadingSteps",type:"int",min:0,max:8}]}mouseAction(t){}}e.exports=a},{"./animation":2,"./utils":25}],8:[function(t,e,i){"use strict";var s=t("./animation");const w=t("./utils");class a{constructor(t,e){this.w=[...t],this.name=e}update(t){return 0}getW(){return this.w}getName(){return this.name}}class S extends a{constructor(t){super(t,"SGD"),this.eta=.001}update(e){for(let t=0;t<this.w.length;++t)this.w[t]-=this.eta*e[t]}}class M extends a{constructor(t){super(t,"Momentum"),this.eta=.01,this.beta=.9,this.m=new Array(t.length).fill(0)}update(e){for(let t=0;t<this.w.length;++t)this.m[t]=this.beta*this.m[t]+(1-this.beta)*e[t],this.w[t]-=this.eta*this.m[t]}}class C extends a{constructor(t){super(t,"AdaGrad"),this.eta=.1,this.v=new Array(t.length).fill(0)}update(e){for(let t=0;t<this.w.length;++t)this.v[t]+=e[t]*e[t],this.w[t]-=this.eta/Math.sqrt(this.v[t]+1e-6)*e[t]}}class I extends a{constructor(t){super(t,"RMSProp"),this.eta=.01,this.beta=.9,this.v=new Array(t.length).fill(0)}update(e){for(let t=0;t<this.w.length;++t)this.v[t]=this.beta*this.v[t]+(1-this.beta)*e[t]*e[t],this.w[t]-=this.eta/Math.sqrt(this.v[t]+1e-6)*e[t]}}class b extends a{constructor(t){super(t,"Adam"),this.eta=.01,this.beta1=.9,this.beta2=.999,this.m=new Array(t.length).fill(0),this.v=new Array(t.length).fill(0)}update(e){for(let t=0;t<this.w.length;++t)this.m[t]=this.beta1*this.m[t]+(1-this.beta1)*e[t],this.v[t]=this.beta2*this.v[t]+(1-this.beta2)*e[t]*e[t],this.w[t]-=this.eta/(Math.sqrt(this.v[t]/(1-this.beta2))+1e-6)*this.m[t]/(1-this.beta1)}}class z extends a{constructor(t){super(t,"AdaMax"),this.alpha=.001,this.beta1=.9,this.beta2=.999,this.m=new Array(t.length).fill(0),this.v=new Array(t.length).fill(0)}update(e){for(let t=0;t<this.w.length;++t)this.m[t]=this.beta1*this.m[t]+(1-this.beta1)*e[t],this.v[t]=Math.max(this.beta2*this.v[t],Math.abs(e[t])),this.w[t]-=this.alpha/(this.v[t]+1e-6)*this.m[t]/(1-this.beta1)}}class A extends a{constructor(t){super(t,"AMSGrad"),this.alpha=.001,this.beta1=.9,this.beta2=.999,this.m=new Array(t.length).fill(0),this.v=new Array(t.length).fill(0)}update(e){for(let t=0;t<this.w.length;++t)this.m[t]=this.beta1*this.m[t]+(1-this.beta1)*e[t],this.v[t]=Math.max(this.beta2*this.v[t]+(1-this.beta2)*e[t]*e[t],this.v[t]),this.w[t]-=this.alpha/(Math.sqrt(this.v[t])+1e-6)*this.m[t]}}class r{constructor(t,e,i,s,a=[0,0],r=400){this.name=t,this.globalMin=e,this.startPoints=i,this.scale=s,this.steps=r,this.shift=a}val(t){return 0}grad(t){return t}hasGlobalMin(){return null!==this.globalMin}getGlobalMin(){return w.subArrays(this.globalMin,this.shift)}getStartPoint(){return w.subArrays(w.randomChoice(this.startPoints),this.shift)}getScale(){return this.scale}getSteps(){return this.steps}getName(){return this.name}}class h extends r{constructor(){super("Two-dimensional non-convex function with saddle point: f(x, y) = x^2 - y^2",null,[[-1,.001],[-1,-1e-4],[1,.01],[1,-.001]],1.1)}val(t){var e=t[0]+this.shift[0],t=t[1]+this.shift[1];return e*e-t*t}grad(t){return[2*(t[0]+this.shift[0]),-2*(t[1]+this.shift[1])]}}class n extends r{constructor(){super("Two-dimensional non-convex BEALE function",[3,.5],[[.2,.7],[2,2],[-1,-1.3],[-1.4,-1.7],[4,-1.1]],2.2,[2,0])}val(t){var e=t[0]+this.shift[0],t=t[1]+this.shift[1];return Math.pow(1.5-e+e*t,2)+Math.pow(2.25-e+e*t*t,2)+Math.pow(2.625-e+e*Math.pow(t,3),2)}grad(t){var e=t[0]+this.shift[0],t=t[1]+this.shift[1],i=t*t,s=i*t,a=s*t,r=a*t;return[2*e*(r*t+a-2*s-i-2*t+3)+5.25*s+4.5*i+3*t-12.75,6*e*(e*(r+2/3*s-i-1/3*t-1/3)+2.625*i+1.5*t+.5)]}}class o extends r{constructor(){super("Two variables non-convex Stybliski-Tang function",[-2.903534,-2.903534],[[0,5],[0,-5],[5,0],[-5,0],[-.5,-5],[-5,-.5]],5.5)}val(t){var e=t[0]+this.shift[0],t=t[1]+this.shift[1],i=e*e,s=t*t;return(i*i-16*i+5*e+(s*s-16*s+5*t))/2+78.33188}grad(t){var e=t[0]+this.shift[0],t=t[1]+this.shift[1];return[2*Math.pow(e,3)-16*e-2.5,2*Math.pow(t,3)-16*t-2.5]}}class l extends s{constructor(t,e,i,s="random"){super(t,e,i,"visualization of gradient descent algorithms","gradient-descent.js",`
Visualization of gradient descent-based optimizers.

Coded with no external dependencies, using only canvas API.
`),this.funcNames=["with saddle point","Beale","Styblinski-Tang"],this.functionToOptimize=this.assignIfRandom(s,w.randomChoice(this.funcNames)),this.funcClasses=[h,n,o],this.scale=0,this.optims=null,this.imageData=null}draw(){this.ctx.translate(this.ctx.canvas.width/2,this.ctx.canvas.height/2);for(let t=0;t<this.optims.length;++t){var e,i,s,a=this.optims[t];[e,i]=a.getW(),a.update(this.func.grad(a.getW())),[a,s]=a.getW(),w.drawLine(this.ctx,e*this.scale,-i*this.scale,a*this.scale,-s*this.scale,this.colorsAlt[t],2)}this.ctx.resetTransform(),this.frame>=this.func.getSteps()&&this.resize()}resize(){this.clear();var t=this.funcClasses[this.funcNames.indexOf(this.functionToOptimize)],i=(this.func=new t,this.frame=0,this.imageData=null,this.ctx.canvas.width),s=this.ctx.canvas.height,a=i/2,r=s/2,h=(this.scale=Math.min(i,s)/this.func.getScale()/2,this.ctx.fillStyle=this.colors[0],this.ctx.font="12px sans-serif",new Array(i*s));let n,o,l,c=0;l=this.func.hasGlobalMin()?(c=this.func.val(this.func.getGlobalMin()),n=[0,.125],o=1.5,0):(c=0,t=this.func.getScale(),t=[this.func.val([0,0]),this.func.val([t,0]),this.func.val([0,t]),this.func.val([-t,0]),this.func.val([0,-t]),this.func.val([t,t]),this.func.val([-t,-t]),this.func.val([t,-t]),this.func.val([-t,t])],y=Math.min(...t),t=Math.max(...t),n=[y],o=1,(t-y)/15);for(let e=0;e<i;++e)for(let t=0;t<s;++t){for(var d=(e-a)/this.scale,p=-(t-r)/this.scale,m=this.func.val([d,p]),u=e+t*i;m>c+n[n.length-1];)n.push(n[n.length-1]*o+l);for(let t=1;t<n.length;++t)if(m<c+n[t]){h[u]=t-1;break}}var g=[];for(let t=0;t<n.length;++t)g.push(w.lerpColor(this.colors[0],this.colors[this.colors.length-1],(t+1)/(n.length+1)));for(let e=0;e<i;++e)for(let t=0;t<s;++t){var f=e+t*i,x=-3*h[f]+h[f+1]+h[f+i]+h[f+1+i];this.ctx.fillStyle=g[h[f]],0!==x&&4!==x&&this.ctx.fillRect(e,t,1,1)}this.ctx.fillStyle=this.colors[0];let e=.5;3<this.scale&&(e=1);for(let t=0;t<a/this.scale;t+=e)this.ctx.fillText(t.toFixed(1),a+t*this.scale,s-22),0!==t&&this.ctx.fillText((-t).toFixed(1),a-t*this.scale,s-22);for(let t=0;t<r/this.scale;t+=e)this.ctx.fillText((-t).toFixed(1),10,r+t*this.scale),0!==t&&this.ctx.fillText(t.toFixed(1),10,r-t*this.scale);t=this.func.getStartPoint();this.optims=[new S(t),new M(t),new C(t),new I(t),new b(t),new z(t),new A(t)];let v=22;var y;this.ctx.font="14px sans-serif",this.ctx.lineWidth=2,this.ctx.fillStyle=this.colors[0],this.ctx.strokeStyle=this.bgColor,this.ctx.fillText(this.func.getName(),50,v),this.func.hasGlobalMin()&&(v+=20,y=this.func.getGlobalMin(),w.fillAndStrokeText(this.ctx,`Optimum: f(x*) = ${Math.round(1e4*this.func.val(y))/1e4}, at x* =  (${y[0]}, ${y[1]})`,50,v,2),w.fillCircle(this.ctx,a+y[0]*this.scale,r+-y[1]*this.scale,2,this.colors[0])),v+=20,w.fillAndStrokeText(this.ctx,`Starting point: x0 = (${t[0]}, ${t[1]})`,50,v),v+=40,w.fillAndStrokeText(this.ctx,"Optimizers:",50,v);for(let t=0;t<this.optims.length;++t)v+=20,this.ctx.fillStyle=this.colorsAlt[t],w.fillAndStrokeText(this.ctx,""+this.optims[t].getName(),70,v),w.fillCircle(this.ctx,53,v-4,3,this.colorsAlt[t]);this.imageData=this.ctx.getImageData(0,0,this.ctx.canvas.width,this.ctx.canvas.height)}getSettings(){return[{prop:"functionToOptimize",type:"select",values:this.funcNames,toCall:"resize"}]}}e.exports=l},{"./animation":2,"./utils":25}],9:[function(require,module,exports){"use strict";const Utils=require("./utils"),ThreeNPlusOne=require("./3n+1"),Cardioids=require("./cardioids"),CircularWaves=require("./circular-waves"),GameOfLife=require("./game-of-life"),GameOfLifeIsometric=require("./game-of-life-isometric"),GradientDescent=require("./gradient-descent"),Matrix=require("./matrix"),Network=require("./network"),NeuralNetwork=require("./neural-network"),ParticlesAndAttractors=require("./particles-and-attractors"),ParticlesVortex=require("./particles-vortex"),ParticlesWaves=require("./particles-waves"),PerlinNoiseParticles=require("./perlin-noise-particles"),Quadtree=require("./quadtree"),ShortestPath=require("./shortest-path"),SineWaves=require("./sine-waves"),Sorting=require("./sorting"),SpinningShapes=require("./spinning-shapes"),Spirograph=require("./spirograph"),canvas=document.getElementById("background"),container=document.getElementById("container");let framesInterval=0,then=0,paused=!1,width=0,height=0,lastWidth=0,lastHeight=0,resizeMode="fit",fixedWidth=512,fixedHeight=512;const colors=["#349BA9","#41B8AD","#73D4AD","#AEEABF","#73D4AD","#41B8AD"],colorsAlt=["#602180","#B6245C","#E14F3B","#EC8C4D","#FFF202","#99F32B","#106AA6","#283B93"],content=document.getElementById("content"),elemBgShow=document.getElementById("background-show"),elemBgName=document.getElementById("background-name"),elemBgDesc=document.getElementById("background-description"),elemBgPrev=document.getElementById("background-previous"),elemBgNext=document.getElementById("background-next"),elemBgCode=document.getElementById("background-code"),elemBgReset=document.getElementById("background-reset"),elemBgRestart=document.getElementById("background-restart"),elemBgPlayPause=document.getElementById("background-play-pause"),elemBgSettings=document.getElementById("background-settings"),elemBgSettingsControls=document.getElementById("background-settings-controls"),elemBgSettingsClose=document.getElementById("background-settings-close"),elemBgStats=document.getElementById("background-stats"),elemBgAnimationSelect=document.getElementById("background-settings-animation-select");let animations=[{class:ThreeNPlusOne,name:"3n+1"},{class:Cardioids,name:"cardioids"},{class:CircularWaves,name:"circular waves"},{class:GameOfLife,name:"game of life"},{class:GameOfLifeIsometric,name:"isometric game of life"},{class:GradientDescent,name:"gradient descent"},{class:Matrix,name:"matrix rain"},{class:Network,name:"network"},{class:ParticlesAndAttractors,name:"particles and attractors"},{class:ParticlesVortex,name:"particles vortex"},{class:ParticlesWaves,name:"particles waves"},{class:PerlinNoiseParticles,name:"perlin noise"},{class:Quadtree,name:"quadtree"},{class:ShortestPath,name:"shortest path"},{class:Sorting,name:"sorting"},{class:SpinningShapes,name:"spinning shapes"},{class:Spirograph,name:"spirograph"},{class:SineWaves,name:"sine waves"}];const animationCount=animations.length;let animationId=Utils.randomInt(0,animationCount),animation=null,order=Array.from({length:animationCount},(t,e)=>e);Utils.randomShuffle(order);for(let i=0;i<animationCount;++i)animations[order[i]].prev=order[(i+animationCount-1)%animationCount],animations[order[i]].next=order[(i+1)%animationCount];const urlParams=new URLSearchParams(window.location.search);if(urlParams.has("animation")){const animationParam=urlParams.get("animation").replaceAll("-"," ");for(let i=0;i<animationCount;++i)animationParam===animations[i].name&&(animationId=i)}function updateAnimation(t){animationId=t;t=(animation=new animations[animationId].class(canvas,colors,colorsAlt)).getFPS();framesInterval=1e3/t,then=Date.now(),animation.resize(),updateUI()}function checkResize(){width=Math.max(container.offsetWidth,window.innerWidth-canvas.offsetLeft),height=Math.max(container.offsetHeight,window.innerHeight-canvas.offsetTop),"fit"===resizeMode?width===lastWidth&&height===lastHeight||(canvas.width=width,canvas.height=height,animation.resize()):(canvas.width===fixedWidth&&height===fixedHeight||(canvas.width=fixedWidth,canvas.height=fixedHeight,animation.resize()),width===lastWidth&&height===lastHeight||(canvas.style.top=(height-fixedHeight)/2+"px",canvas.style.left=(width-fixedWidth)/2+"px")),lastHeight=height,lastWidth=width}function render(){var t,e;paused||(e=(t=Date.now())-then,requestAnimationFrame(render),e<=framesInterval)||(then=t,checkResize(),animation.update(e),animation.draw(),elemBgStats&&(elemBgStats.innerHTML=`frame time: ${e}</br>
                                fps: ${Math.round(1e3/e)}</br>
                                canvas size: ${width} x `+height))}function play(){elemBgPlayPause.innerHTML='<i class="fas fa-pause"></i> pause',paused=!1,then=Date.now(),render()}function pause(){elemBgPlayPause.innerHTML='<i class="fas fa-play"></i> play',paused=!0}function hideBackground(){content.classList.remove("fade-out"),content.classList.add("fade-in"),canvas.classList.remove("show-from-10"),canvas.classList.add("fade-to-10"),elemBgShow.innerHTML='<i class="fas fa-eye"></i> show'}function showBackground(){content.classList.remove("fade-in"),content.classList.add("fade-out"),canvas.classList.remove("faded-10"),canvas.classList.remove("fade-to-10"),canvas.classList.add("show-from-10"),elemBgShow.innerHTML='<i class="fas fa-eye-slash"></i> hide'}function closeSettings(){elemBgSettingsControls.classList.remove("fade-in"),elemBgSettingsControls.classList.add("fade-out")}function showSettings(){elemBgSettingsControls.classList.remove("fade-out"),elemBgSettingsControls.classList.add("fade-in"),elemBgSettingsControls.style.display="block"}function processDescription(t){return t=(t="<p>"+(t=t.trim().replaceAll("\n\n","</p><p>"))+"</p>").replaceAll(/(.*)(https?:\/\/(?:www\.)?[-a-zA-Z0-9@:%._\+~#=]{1,256}\.[a-zA-Z0-9()]{1,6}\b(?:[-a-zA-Z0-9()@:%_\+.~#?&\/=]*))(.*)/g,'$1<a href="$2">$2</a>$3')}function updateUI(){elemBgName&&(elemBgName.innerHTML=animation.getName()),elemBgCode&&(elemBgCode.href=animation.getCodeUrl()),elemBgDesc&&(elemBgDesc.innerHTML=processDescription(animation.getDescription()));let animationSelectOptions="";for(let i=0;i<animations.length;++i){const name=animations[i].name;animations[animationId].name===name?animationSelectOptions+=`<option selected value="${i}">${name}</option>`:animationSelectOptions+=`<option value="${i}">${name}</option>`}elemBgAnimationSelect.innerHTML=animationSelectOptions;const settings=animation.getSettings();let elemBgSettingsList=document.getElementById("background-settings-controls-list");elemBgSettingsControls&&elemBgSettingsList&&(elemBgSettingsList.innerHTML="",0===settings.length&&(elemBgSettingsList.innerHTML="There are no settings (yet) for this animation"),settings.forEach(function(setting,index){const value=eval("animation."+setting.prop),elemId=setting.prop.split(/(?=[A-Z])/).join("-").toLowerCase()+"-controls",name=setting.prop.split(/(?=[A-Z])/).join(" ").toLowerCase();let optionControls=`<div><span class="setting-name">${name}</span><span class="nowrap setting-value-control">`;if(["int","float","bool"].includes(setting.type)){let inputParams=`name="${setting.prop}" id="${elemId}" value="${value}"`;["int","float"].includes(setting.type)&&(setting.step?inputParams+=` step="${setting.step}"`:"float"===setting.type?inputParams+=' step="0.01"':inputParams+=' step="1"',inputParams+=` min="${setting.min}" max="${setting.max}"`),"bool"===setting.type&&value&&(inputParams+=" checked"),"bool"===setting.type?optionControls+=`<label class="form-checkbox setting-input"><input type="checkbox" ${inputParams}><i class="form-icon"></i></label>`:optionControls+=`<input type="range" class="setting-input slider" ${inputParams}">`,optionControls+=`[<output class="setting-value">${value}</output>]`}if("select"===setting.type){optionControls+=`<select class="form-select setting-select" name="${setting.prop}" id="${elemId}">`;for(var v of setting.values)v===value?optionControls+=`<option selected value="${v}">${v}</option>`:optionControls+=`<option value="${v}">${v}</option>`;optionControls+="</select>"}optionControls+="</span></div>",elemBgSettingsList.innerHTML+=optionControls}),settings.forEach(function(setting,index){const elemId=setting.prop.split(/(?=[A-Z])/).join("-").toLowerCase()+"-controls";let elem=document.getElementById(elemId);elem&&elem.addEventListener("input",function(e){if("checkbox"===e.target.type)null!==e.target.parentNode.nextElementSibling&&"output"===e.target.parentNode.nextElementSibling.type&&(e.target.parentNode.nextElementSibling.value=e.target.checked),eval(`animation.${setting.prop} = e.target.checked;`);else{null!==e.target.nextElementSibling&&"output"===e.target.nextElementSibling.type&&(e.target.nextElementSibling.value=e.target.value);let value=e.target.value;"int"===setting.type?value=parseInt(e.target.value):"float"===setting.type&&(value=parseFloat(e.target.value)),eval(`animation.${setting.prop} = value;`)}setting.toCall&&animation[setting.toCall](),elemBgName.innerHTML=animation.getName(),play()})}))}updateAnimation(animationId),render(),elemBgShow&&elemBgShow.addEventListener("click",function(){(content.classList.contains("fade-out")?hideBackground:showBackground)()}),elemBgPrev&&elemBgPrev.addEventListener("click",function(){updateAnimation(animations[animationId].prev),play()}),elemBgNext&&elemBgNext.addEventListener("click",function(){updateAnimation(animations[animationId].next),play()}),elemBgReset&&elemBgReset.addEventListener("click",function(){updateAnimation(animationId),play()}),elemBgRestart&&elemBgRestart.addEventListener("click",function(){animation.restart(),play()}),elemBgPlayPause&&elemBgPlayPause.addEventListener("click",function(){(!1===paused?pause:play)()}),elemBgSettings&&elemBgSettingsControls&&elemBgSettingsClose&&(elemBgSettings.addEventListener("click",function(){(elemBgSettingsControls.classList.contains("fade-out")||"none"===elemBgSettingsControls.style.display?showSettings:closeSettings)()}),elemBgSettingsClose.addEventListener("click",function(){closeSettings()}),elemBgAnimationSelect.addEventListener("input",function(t){updateAnimation(parseInt(t.target.value))}),elemBgSettingsControls.addEventListener("mousedown",function(t){t.target===t.currentTarget&&(t.target.classList.add("moving"),t.target.clickAnchorX=t.clientX-parseInt(t.target.style.left),t.target.clickAnchorY=t.clientY-parseInt(t.target.style.top))}),addEventListener("mousemove",function(t){elemBgSettingsControls.classList.contains("moving")&&(elemBgSettingsControls.style.left=t.clientX-elemBgSettingsControls.clickAnchorX+"px",elemBgSettingsControls.style.top=t.clientY-elemBgSettingsControls.clickAnchorY+"px")}),addEventListener("mouseup",function(t){elemBgSettingsControls.classList.remove("moving")}))},{"./3n+1":1,"./cardioids":3,"./circular-waves":4,"./game-of-life":7,"./game-of-life-isometric":6,"./gradient-descent":8,"./matrix":10,"./network":11,"./neural-network":12,"./particles-and-attractors":14,"./particles-vortex":15,"./particles-waves":16,"./perlin-noise-particles":17,"./quadtree":18,"./shortest-path":20,"./sine-waves":21,"./sorting":22,"./spinning-shapes":23,"./spirograph":24,"./utils":25}],10:[function(t,e,i){"use strict";var s=t("./animation");const a=t("./utils");class r extends s{constructor(t,e,i,s=20,a=.6,r=.01){super(t,e,i,"Matrix digital rain","matrix.js",`
Recreation of matrix digital rain based on this analysis
of the original effect: https://carlnewton.github.io/digital-rain-analysis/
I'm a huge fan of the first movie.
 
Coded with no external dependencies, using only canvas API.
`),this.dropsSize=s,this.dropsSpeed=a,this.fadingSpeed=r,this.flipProp=.25,this.errorProp=.1,this.cellWidth=0,this.cellHeight=0,this.columns=0,this.columnHeight=0,this.drops=[],this.imageData=null;this.characters='ｦｰｱｲｳｴｵｶｷｸｹｺｻｼｽｾｿﾀﾁﾂﾃﾄﾅﾆﾇﾈﾉﾊﾋﾌﾍﾎﾏﾐﾑﾒﾓﾔﾕﾖﾗﾘﾙﾚﾜﾝ0123456789*+:=.<>#@!?^~"'}dropSpawnPoint(t){return a.randomInt(0,Math.min(t-1,this.columnHeight/2))-1}dropDespawn(t){return Math.random()<.1*Math.pow(t/this.columnHeight,2)||t>this.columnHeight}drawCharacter(t,e,i,s){this.ctx.fillStyle=this.bgColor,this.ctx.fillRect(e-this.cellWidth/2,i,this.cellWidth,this.cellHeight),this.ctx.fillStyle=s,Math.random()<this.flipProp?(this.ctx.save(),this.ctx.translate(e,i),this.ctx.scale(-1,1),this.ctx.fillText(t,0,0),this.ctx.restore()):this.ctx.fillText(t,e,i)}draw(){this.fadeOut(this.fadingSpeed),this.ctx.font=this.dropsSize+"px monospace",this.ctx.textAlign="center",this.ctx.textBaseline="top";for(var t of this.drops){var e,i;Math.floor(t.y)!==Math.floor(t.y+this.dropsSpeed)?(t.y+=this.dropsSpeed,e=t.x*this.cellWidth+this.cellWidth/2,i=Math.floor(t.y)*this.cellHeight,this.drawCharacter(t.char,e,i,this.colors[0]),t.char=a.randomChoice(this.characters),this.dropDespawn(t.y)&&(t.y=this.dropSpawnPoint(t.y)),Math.random()<this.errorProp&&(i=a.randomInt(-8,8),this.drawCharacter(a.randomChoice(this.characters),e,Math.floor(i+t.y)*this.cellHeight,this.colors[0]))):t.y+=this.dropsSpeed}this.imageData=this.ctx.getImageData(0,0,this.ctx.canvas.width,this.ctx.canvas.height)}resize(){if(this.clear(),null!==this.imageData&&this.ctx.putImageData(this.imageData,0,0),this.cellHeight=this.dropsSize,this.cellWidth=Math.ceil(this.dropsSize/1.618),this.columns=this.ctx.canvas.width/this.cellWidth,this.columnHeight=this.ctx.canvas.height/this.cellHeight,this.drops.length<this.columns)for(let t=this.drops.length;t<this.columns;++t)this.drops.push({char:a.randomChoice(this.characters),x:t,y:this.dropSpawnPoint(this.columnHeight)})}restart(){this.drops=[],this.resize(),this.clear()}getSettings(){return[{prop:"dropsSize",type:"int",min:8,max:64,toCall:"resize"},{prop:"dropsSpeed",type:"float",min:0,max:1},{prop:"fadingSpeed",type:"float",step:.001,min:0,max:.5}]}}e.exports=r},{"./animation":2,"./utils":25}],11:[function(t,e,i){"use strict";var s=t("./animation");const h=t("./utils"),r=t("./delaunay");class a extends s{constructor(t,e,i,s=2e-4,a=!0,r=!1,h=125){super(t,e,i,"Delaunay triangulation for a cloud of particles","network.js",`
Delaunay triangulation algorithm for cloud of moving particles
Applied to create network-like structure.

Source of Delaunay triangulation implementation:
https://github.com/darkskyapp/delaunay-fast
`),this.particlesDensity=s,this.fillTriangles=a,this.drawParticles=r,this.distanceThreshold=h,this.width=0,this.height=0,this.particles=[]}drawTriangle(t,e,i){var s=Math.max(h.distVec2d(t,e),h.distVec2d(t,e),h.distVec2d(e,i));s>this.distanceThreshold||(this.ctx.beginPath(),h.pathClosedShape(this.ctx,[t,e,i]),e=h.lerpColor(t.color,this.bgColor,h.easeInSine(s/this.distanceThreshold)),this.fillTriangles?(this.ctx.fillStyle=e,this.ctx.fill()):(this.ctx.lineWidth=1,this.ctx.strokeStyle=e,this.ctx.stroke()))}update(t){super.update(t);for(var e of this.particles)e.x+=e.velX*this.speed,e.y+=e.velY*this.speed,(e.x<0||e.x>this.width)&&(e.velX*=-1),(e.y<0||e.y>this.height)&&(e.velY*=-1)}draw(){if(this.fadeOut(this.fadingSpeed),0<this.particles.length){var e=r.triangulate(this.particles.map(function(t){return[t.x,t.y]}));for(let t=0;t<e.length;t+=3){var i=this.particles[e[t]],s=this.particles[e[t+1]],a=this.particles[e[t+2]];this.drawTriangle(i,s,a)}}if(this.drawParticles)for(var t of this.particles)h.fillCircle(this.ctx,t.x,t.y,2,t.color)}spawnParticles(e,i,s,a){var r=s*a*this.particlesDensity;for(let t=0;t<r;t++)this.particles.push({x:Math.random()*s+e,y:Math.random()*a+i,velY:2*Math.random()-1,velX:2*Math.random()-1,color:h.randomChoice(this.colors)})}restart(){this.particles=[],this.width=this.ctx.canvas.width,this.height=this.ctx.canvas.height,this.spawnParticles(0,0,this.width,this.height)}resize(){this.clear();var t=this.ctx.canvas.width-this.width,e=this.ctx.canvas.height-this.height;0<t&&this.spawnParticles(this.width,0,t,this.height),0<e&&this.spawnParticles(0,this.height,this.width,e),(0<t||0<e)&&this.spawnParticles(this.width,this.height,t,e),this.width=this.ctx.canvas.width,this.height=this.ctx.canvas.height;const i=this.width,s=this.height;this.particles=this.particles.filter(function(t){return!(t.x<0||t.x>i||t.y<0||t.y>s)})}getSettings(){return[{prop:"particlesDensity",type:"float",step:1e-4,min:1e-4,max:.002,toCall:"restart"},{prop:"fillTriangles",type:"bool"},{prop:"drawParticles",type:"bool"},{prop:"distanceThreshold",type:"int",min:0,max:200},{prop:"speed",type:"float",step:.1,min:-4,max:4}]}}e.exports=a},{"./animation":2,"./delaunay":5,"./utils":25}],12:[function(t,e,i){"use strict";var s=t("./animation");const c=t("./utils");class a extends s{constructor(t,e,i){super(t,e,i,"visualization of simple neural network","neural-network.js"),this.network=[],this.nLayers=0,this.baseNodeSize=3,this.baseLineSize=1,this.fps=1.5}update(t){if(0!==this.network.length){for(var e of this.network[0])e.v=c.randomRange(-1,1);for(let e=1;e<this.nLayers;e++)for(var i of this.network[e]){for(let t=i.v=0;t<this.network[e-1].length;++t)i.v+=this.network[e-1][t].v*i.w[t];e===this.nLayers-1?i.nlv=1/(1+Math.exp(-i.v)):i.nlv=Math.max(0,i.v)}}}draw(){this.clear();for(let t=0;t<this.nLayers-1;t++){var e,i=this.network[t],s=this.network[t+1];for(e of i)for(var a of s){var r=c.clip(e.v,0,1),h=this.colors[this.colors.length-1-Math.floor(r*this.colors.length)];this.ctx.globalAlpha=r,c.drawLine(this.ctx,e.x,e.y,a.x,a.y,h,1+r)}}this.ctx.globalAlpha=1;for(let e=0;e<this.nLayers;++e){var n;for(n of this.network[e]){var o=c.clip(n.nlv,0,1),l=c.clip(2*n.nlv,0,4),o=this.colors[this.colors.length-1-Math.floor(o*this.colors.length)],l=this.baseNodeSize+l;c.fillCircle(this.ctx,n.x,n.y,l,o),this.ctx.font="12px sans-serif",this.ctx.textAlign="center";let t=`ReLU(${c.round(n.v,2)}) = `+c.round(n.nlv,2);0===e?t=""+c.round(n.v,2):e===this.nLayers-1&&(t=`Sigmoid(${c.round(n.v,2)}) = `+c.round(n.nlv,2)),this.ctx.fillText(t,n.x,n.y-3*this.baseNodeSize)}}}resize(){c.clear(this.ctx,"#FFFFFF");var t=this.ctx.canvas.width,a=this.ctx.canvas.height,e=(this.network=[],this.nLayers=c.clip(Math.floor(t/150),3,7),50*t/500),r=(t-2*e)/(this.nLayers-1),h=a/17;let n=e;for(let s=0;s<this.nLayers;s++){var o=[];let e=0,i=(e=0==s||s==this.nLayers-1?Math.floor(c.randomRange(4,16)):c.randomChoice([8,12,16]),a/2-Math.floor(e/2)*h);e%2==0&&(i+=h/2);for(let t=0;t<e;t++){var l={x:n,y:i,v:0,nlv:0,w:null};0<s&&(l.w=c.randomArray(this.network[s-1].length,-1,1)),o.push(l),i+=h}this.network.push(o),n+=r}this.update(0),this.draw()}getSettings(){return[]}}e.exports=a},{"./animation":2,"./utils":25}],13:[function(t,e,i){"use strict";var s=this;function a(t,e,i){this.x=t,this.y=e,this.z=i}s=s.noise={},a.prototype.dot2=function(t,e){return this.x*t+this.y*e},a.prototype.dot3=function(t,e,i){return this.x*t+this.y*e+this.z*i};var r=[new a(1,1,0),new a(-1,1,0),new a(1,-1,0),new a(-1,-1,0),new a(1,0,1),new a(-1,0,1),new a(1,0,-1),new a(-1,0,-1),new a(0,1,1),new a(0,-1,1),new a(0,1,-1),new a(0,-1,-1)],h=[151,160,137,91,90,15,131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,8,99,37,240,21,10,23,190,6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,35,11,32,57,177,33,88,237,149,56,87,174,20,125,136,171,168,68,175,74,165,71,134,139,48,27,166,77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,55,46,245,40,244,102,143,54,65,25,63,161,1,216,80,73,209,76,132,187,208,89,18,169,200,196,135,130,116,188,159,86,164,100,109,198,173,186,3,64,52,217,226,250,124,123,5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,189,28,42,223,183,170,213,119,248,152,2,44,154,163,70,221,153,101,155,167,43,172,9,129,22,39,253,19,98,108,110,79,113,224,232,178,185,112,104,218,246,97,228,251,34,242,193,238,210,144,12,191,179,162,241,81,51,145,235,249,14,239,107,49,192,214,31,181,199,106,157,184,84,204,176,115,121,50,45,127,4,150,254,138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180],M=new Array(512),C=new Array(512),d=(s.seed=function(t){0<t&&t<1&&(t*=65536),(t=Math.floor(t))<256&&(t|=t<<8);for(var e=0;e<256;e++){var i=1&e?h[e]^255&t:h[e]^t>>8&255;M[e]=M[e+256]=i,C[e]=C[e+256]=r[i%12]}},s.seed(0),.5*(Math.sqrt(3)-1)),p=(3-Math.sqrt(3))/6,I=1/6;function m(t){return t*t*t*(t*(6*t-15)+10)}function u(t,e,i){return(1-i)*t+i*e}s.simplex2=function(t,e){var i=(t+e)*d,s=Math.floor(t+i),i=Math.floor(e+i),a=(s+i)*p,t=t-s+a,e=e-i+a,a=e<t?(c=1,0):(c=0,1),r=t-c+p,h=e-a+p,n=t-1+2*p,o=e-1+2*p,l=C[(s&=255)+M[i&=255]],c=C[s+c+M[i+a]],a=C[1+s+M[1+i]],s=.5-t*t-e*e,i=s<0?0:(s*=s)*s*l.dot2(t,e),s=.5-r*r-h*h,l=s<0?0:(s*=s)*s*c.dot2(r,h),t=.5-n*n-o*o,e=t<0?0:(t*=t)*t*a.dot2(n,o);return 70*(i+l+e)},s.simplex3=function(t,e,i){var s=(t+e+i)*(1/3),a=Math.floor(t+s),r=Math.floor(e+s),s=Math.floor(i+s),h=(a+r+s)*I,t=t-a+h,e=e-r+h,i=i-s+h,h=e<=t?i<=e?(S=w=x=1,y=v=0):w=i<=t?(S=y=v=0,x=1):(S=v=x=0,y=1):e<i?(w=v=x=0,S=y=1):t<i?(w=y=x=0,S=v=1):(S=w=v=1,y=x=0),n=t-x+I,o=e-v+I,l=i-y+I,c=t-w+2*I,d=e-S+2*I,p=i-h+2*I,m=t-1+.5,u=e-1+.5,g=i-1+.5,f=C[(a&=255)+M[(r&=255)+M[s&=255]]],x=C[a+x+M[r+v+M[s+y]]],v=C[a+w+M[r+S+M[s+h]]],y=C[1+a+M[1+r+M[1+s]]],w=.6-t*t-e*e-i*i,S=w<0?0:(w*=w)*w*f.dot3(t,e,i),h=.6-n*n-o*o-l*l,a=h<0?0:(h*=h)*h*x.dot3(n,o,l),r=.6-c*c-d*d-p*p,s=r<0?0:(r*=r)*r*v.dot3(c,d,p),w=.6-m*m-u*u-g*g,f=w<0?0:(w*=w)*w*y.dot3(m,u,g);return 32*(S+a+s+f)},s.perlin2=function(t,e){var i=Math.floor(t),s=Math.floor(e),a=(t-=i,e-=s,C[(i&=255)+M[s&=255]].dot2(t,e)),r=C[i+M[1+s]].dot2(t,e-1),h=C[1+i+M[s]].dot2(t-1,e),i=C[1+i+M[1+s]].dot2(t-1,e-1),s=m(t);return u(u(a,h,s),u(r,i,s),m(e))},s.perlin3=function(t,e,i){var s=Math.floor(t),a=Math.floor(e),r=Math.floor(i),h=(t-=s,e-=a,i-=r,C[(s&=255)+M[(a&=255)+M[r&=255]]].dot3(t,e,i)),n=C[s+M[a+M[1+r]]].dot3(t,e,i-1),o=C[s+M[1+a+M[r]]].dot3(t,e-1,i),l=C[s+M[1+a+M[1+r]]].dot3(t,e-1,i-1),c=C[1+s+M[a+M[r]]].dot3(t-1,e,i),d=C[1+s+M[a+M[1+r]]].dot3(t-1,e,i-1),p=C[1+s+M[1+a+M[r]]].dot3(t-1,e-1,i),s=C[1+s+M[1+a+M[1+r]]].dot3(t-1,e-1,i-1),a=m(t),r=m(e),t=m(i);return u(u(u(h,c,a),u(n,d,a),t),u(u(o,p,a),u(l,s,a),t),r)}},{}],14:[function(t,e,i){"use strict";var s=t("./animation");const p=t("./utils");class a extends s{constructor(t,e,i,s=1e4,a="random",r=.03,h=5,n="random",o="random",l=!1,c=1,d=!1){super(t,e,i,"system of particles and attractors","particles-and-attractors.js",`
Very simple particles system with attractors.
In this system, distance and momentum are ignored.
The new velocity vector of a particle is calculated as the sum of angles
between the particle and all attractors (see line 51+).

Coded with no external dependencies, using only canvas API.
`),this.particles=[],this.numParticles=s,this.particlesSpeed=this.assignIfRandom(a,p.round(p.randomRange(5,15))),this.fadingSpeed=r,this.drawAttractors=l,this.numAttractors=h,this.attractorsSystems=["orbits","eights"],this.attractorsSystem=this.assignIfRandom(n,p.randomChoice(this.attractorsSystems)),this.attractorsSpeed=this.assignIfRandom(o,p.round(p.randomRange(.05,.1)*p.randomChoice([-1,1]))),this.attractorsPosition=0,this.startingPosition=p.randomRange(0,10),this.scale=c,this.rainbowColors=d,this.setup()}setup(){this.particles=[];for(let t=0;t<this.numParticles;++t)this.particles.push(p.rotateVec2d(p.createVec2d(p.randomRange(1,100),0),t))}update(t){super.update(t),this.attractorsPosition+=t/1e3*this.attractorsSpeed}draw(){this.fadeOut(this.fadingSpeed),this.ctx.translate(this.ctx.canvas.width/2,this.ctx.canvas.height/2),this.ctx.scale(this.scale,this.scale);var e=this.startingPosition+this.attractorsPosition,i=[];if("orbits"===this.attractorsSystem){var s=Math.max(this.ctx.canvas.width,this.ctx.canvas.height)/(2*(this.numAttractors-1));for(let t=0;t<this.numAttractors;++t)i.push(p.rotateVec2d(p.createVec2d(t*s,0),e*t))}else if("eights"===this.attractorsSystem){var a=Math.max(this.ctx.canvas.width,this.ctx.canvas.height)/this.numAttractors;for(let t=0;t<this.numAttractors;++t)i.push(p.rotateVec2d(p.createVec2d(t*Math.sin(e*Math.PI/2)*a,0),e*t))}var r,h=this.rainbowColors?`hsl(${this.time/5*360}, 100%, 75%)`:this.colors[0];for(r of this.particles){let t=0;for(var n of i)t+=Math.atan2(n.y-r.y,n.x-r.x);var o=r.x,l=r.y;r.x+=Math.cos(t)*this.particlesSpeed,r.y+=Math.sin(t)*this.particlesSpeed,p.drawLine(this.ctx,o,l,r.x,r.y,h)}if(this.drawAttractors)for(var t of i)p.fillCircle(this.ctx,t.x,t.y,5,this.colorsAlt[2]);this.ctx.resetTransform()}resize(){this.clear()}restart(){super.restart(),this.attractorsPosition=0,this.setup()}getSettings(){return[{prop:"numParticles",type:"int",min:1e3,max:15e3,toCall:"setup"},{prop:"particlesSpeed",type:"float",min:1,max:20},{prop:"fadingSpeed",type:"float",step:.001,min:0,max:.1},{prop:"attractorsSystem",type:"select",values:this.attractorsSystems},{prop:"numAttractors",type:"int",min:3,max:7},{prop:"attractorsSpeed",type:"float",min:-.2,max:.2},{prop:"drawAttractors",type:"bool"},{prop:"scale",type:"float",min:.05,max:1.95},{prop:"rainbowColors",type:"bool"}]}}e.exports=a},{"./animation":2,"./utils":25}],15:[function(t,e,i){"use strict";var s=t("./animation");const c=t("./noise"),d=t("./utils");class a extends s{constructor(t,e,i,s=1500,a="random",r="random",h="random",n="random",o="random",l=1){super(t,e,i,"vortex of particles","particles-vortex.js",`
Particles vortex with randomized speed and direction.

Coded with no external dependencies, using only canvas API.
`),this.noise=c.noise,this.noise.seed(d.randomRange(0,1)),this.particles=s,this.radiusMin=50,this.radiusMax=250,this.radius=this.assignIfRandom(a,d.round(d.randomRange(this.radiusMin,this.radiusMax),2)),this.speedMin=.02,this.speedMax=.05,this.speed=this.assignIfRandom(r,d.round(d.randomRange(this.speedMin,this.speedMax)*d.randomChoice([-1,1]),2)),this.rotationSpeedMin=.01,this.rotationSpeedMax=.02,this.rotationSpeed=this.assignIfRandom(h,d.round(d.randomRange(this.rotationSpeedMin,this.rotationSpeedMax)*d.randomChoice([-1,1]),2)),this.dirMax=.75,this.dirX=this.assignIfRandom(n,d.round(d.randomRange(-this.dirMax,this.dirMax),2)),this.dirY=this.assignIfRandom(o,d.round(d.randomRange(-this.dirMax,this.dirMax),2)),this.scale=l}draw(){d.clear(this.ctx,"#FFFFFF"),this.ctx.lineWidth=1,this.ctx.strokeStyle=this.colors[0];var t=Math.min(this.ctx.canvas.width,this.ctx.canvas.height)/4,e=this.ctx.canvas.width/2+this.dirX*t,t=this.ctx.canvas.height/2+this.dirY*t,i=Math.round(1e4*this.time)/10;this.ctx.translate(e,t),this.ctx.scale(this.scale,this.scale),this.ctx.beginPath();for(let t=1;t<=this.particles;t++){var s=this.radius+Math.pow(t/(this.particles/1.5),2)*t/2,a=100*this.noise.perlin2(.1*t+i,.1)+i*this.rotationSpeed,r=Math.cos(a)*s+Math.sqrt(t*this.radius)*this.dirX,a=Math.sin(a)*s+Math.sqrt(t*this.radius)*this.dirY;d.pathCircle(this.ctx,r,a,.01*t)}this.ctx.stroke(),this.ctx.resetTransform()}getSettings(){return[{prop:"particles",type:"int",min:1,max:3e3},{prop:"radius",type:"float",min:this.radiusMin,max:this.radiusMax},{prop:"speed",type:"float",min:-this.speedMax,max:this.speedMax},{prop:"rotationSpeed",type:"float",min:-this.rotationSpeedMax,max:this.rotationSpeedMax},{prop:"dirX",type:"float",min:-this.dirMax,max:this.dirMax},{prop:"dirY",type:"float",min:-this.dirMax,max:this.dirMax}]}}e.exports=a},{"./animation":2,"./noise":13,"./utils":25}],16:[function(t,e,i){"use strict";var s=t("./animation");const h=t("./noise"),n=t("./utils");class a extends s{constructor(t,e,i,s=.005,a=.001,r=.02){super(t,e,i,"particles waves","particles-waves.js",`
"Particles waves" animation.
The effect was achieved by modifying perlin-noise-particles.js.

Coded with no external dependencies, using only canvas API.
`),this.particlesDensity=s,this.noiseScale=a,this.fadingSpeed=r,this.noise=h.noise,this.noise.seed(n.randomRange(0,1)),this.particles=[],this.width=0,this.height=0}update(t){super.update(t);for(var e of this.particles){var i=2*this.noise.perlin3(e.x*this.noiseScale*2,e.y*this.noiseScale*3,this.frame*this.noiseScale*3)*Math.PI;e.x+=2*Math.tan(i),e.y+=2*Math.sin(i),e.x<0&&(e.x=this.width),e.x>this.width&&(e.x=0),e.y<0&&(e.y=this.height),e.y>this.height&&(e.y=0)}}draw(){this.fadeOut(this.fadingSpeed);for(var t of this.particles)this.ctx.fillStyle=t.color,this.ctx.fillRect(t.x,t.y,1,1)}resize(){this.clear(),this.width=this.ctx.canvas.width,this.height=this.ctx.canvas.height;var e=this.width*this.height*this.particlesDensity;this.particles=[];for(let t=0;t<e;t++){var i=Math.random()*this.width,s=Math.random()*this.height;this.particles.push({x:i,y:s,color:n.lerpColor(this.colorA,this.colorB,i/this.width)})}}reset(){}getSettings(){return[{prop:"particlesDensity",type:"float",step:1e-4,min:1e-4,max:.01,toCall:"resize"},{prop:"noiseScale",type:"float",step:.001,min:.001,max:.01},{prop:"fadingSpeed",type:"float",step:.001,min:0,max:.1}]}}e.exports=a},{"./animation":2,"./noise":13,"./utils":25}],17:[function(t,e,i){"use strict";var s=t("./animation");const n=t("./noise"),o=t("./utils");class a extends s{constructor(t,e,i,s=4e-4,a=.001,r=1,h=0){super(t,e,i,"particles moving through Perlin noise","perlin-noise-particles.js",`
Particles moving through Perlin noise.

Coded with no external dependencies, using only canvas API.
`),this.particlesDensity=s,this.noiseScale=a,this.noise=n.noise,this.noise.seed(o.randomRange(0,1)),this.particlesSpeed=r,this.fadingSpeed=h,this.width=0,this.height=0,this.particles=[],this.imageData=null}update(t){this.time+=t/1e3,++this.frame;let e=1,i=this.particlesSpeed;for(;1<i;)i/=2,e*=2;for(var s of this.particles)s.prevX=s.x,s.prevY=s.y;for(let t=0;t<e;++t)for(var a of this.particles){var r=2*this.noise.perlin2(a.x*this.noiseScale,a.y*this.noiseScale)*Math.PI/this.noiseScale;a.x+=Math.cos(r)*a.speed*i,a.y+=Math.sin(r)*a.speed*i}}draw(){this.fadeOut(this.fadingSpeed);for(var t of this.particles)o.drawLine(this.ctx,t.prevX,t.prevY,t.x,t.y,t.color,2*t.radius);this.imageData=this.ctx.getImageData(0,0,this.ctx.canvas.width,this.ctx.canvas.height)}spawnParticles(e,i,s,a){var r=s*a*this.particlesDensity;for(let t=0;t<r;t++){var h=Math.random()*s+e,n=Math.random()*a+i;this.particles.push({x:h,y:n,prevX:h,prevY:n,speed:.2*Math.random()+.1,radius:.5*Math.random()+.5,color:o.randomChoice(this.colors)})}}reset(){this.clear(),this.particles=[],this.width=this.ctx.canvas.width,this.height=this.ctx.canvas.height,this.spawnParticles(0,0,this.width,this.height)}resize(){this.clear(),null!==this.imageData&&this.ctx.putImageData(this.imageData,0,0);var t=this.ctx.canvas.width-this.width,e=this.ctx.canvas.height-this.height;0<t&&this.spawnParticles(this.width,0,t,this.height),0<e&&this.spawnParticles(0,this.height,this.width,e),(0<t||0<e)&&this.spawnParticles(this.width,this.height,t,e),this.width=this.ctx.canvas.width,this.height=this.ctx.canvas.height;const i=this.width,s=this.height;this.particles=this.particles.filter(function(t){return!(t.x<0||t.x>i||t.y<0||t.y>s)})}getSettings(){return[{prop:"noiseScale",type:"float",step:.001,min:.001,max:.01,toCall:"reset"},{prop:"particlesDensity",type:"float",step:1e-4,min:1e-4,max:.002,toCall:"reset"},{prop:"particlesSpeed",type:"float",min:.25,max:32},{prop:"fadingSpeed",type:"float",step:1e-4,min:0,max:.01}]}}e.exports=a},{"./animation":2,"./noise":13,"./utils":25}],18:[function(t,e,i){"use strict";var s=t("./animation");const n=t("./utils"),o=t("./noise");class a extends s{constructor(t,e,i,s=1,a=9,r=!1,h=.001){super(t,e,i,"quadtree visualization","quadtree.js",`
Visualization of quadtree algorithm.
See: https://en.wikipedia.org/wiki/Quadtree

Coded with no external dependencies, using only canvas API.
`),this.pointsDensity=a,this.noiseScale=h,this.noise=o.noise,this.noise.seed(n.randomRange(0,1)),this.width=0,this.height=0,this.drawPoints=r,this.maxPointsInNode=s}generatePoints(){var i=[],t=Math.max(this.width,this.height),s=t/Math.pow(2,this.pointsDensity),a=s/2,r=s/t;for(let e=-s/2;e<this.width;e+=s)for(let t=-s/2;t<this.height;t+=s){var h=this.noise.perlin3(e*this.noiseScale,t*this.noiseScale,.05*this.time);Math.abs(h)<=r&&i.push({x:n.randomRange(e-a,e+a),y:n.randomRange(t-a,t+a)})}return i}quadTree(t,e,i,s){var a=i/2,r=i/4;if(s.length<=this.maxPointsInNode)this.ctx.strokeRect(t-a,e-a,i,i);else{var h,n=[],o=[],l=[],c=[];for(h of s)h.x<t&&h.y>=e?n.push(h):h.x>=t&&h.y>=e?o.push(h):h.x>=t&&h.y<e?c.push(h):h.x<t&&h.y<e&&l.push(h);this.quadTree(t+r,e+r,a,o),this.quadTree(t+r,e-r,a,c),this.quadTree(t-r,e+r,a,n),this.quadTree(t-r,e-r,a,l)}}draw(){n.clear(this.ctx,"#FFFFFF"),this.width=this.ctx.canvas.width,this.height=this.ctx.canvas.height;var t=Math.max(this.width,this.height),e=this.generatePoints();if(this.ctx.lineWidth=1,this.ctx.strokeStyle=this.colors[0],this.quadTree(this.width/2,this.height/2,t,e),this.drawPoints)for(var i of e)n.fillCircle(this.ctx,i.x,i.y,2,this.colorsAlt[1])}getSettings(){return[{prop:"maxPointsInNode",type:"int",min:1,max:16},{prop:"noiseScale",type:"float",step:1e-4,min:5e-4,max:.0015},{prop:"pointsDensity",type:"int",min:1,max:10},{prop:"drawPoints",type:"bool"}]}}e.exports=a},{"./animation":2,"./noise":13,"./utils":25}],19:[function(t,e,i){"use strict";e.exports=class{constructor(t=32,e=!1,i=function(t,e){return t.value<e.value}){this.array=new Array(t),this.elemComperator=i,this.priorityQueue=e,this.first=0,this.size=0}getArrayIdx(t){return(this.first+t)%this.array.length}push(t){if(this.size>=this.array.length){var e=new Array(2*this.size);for(let t=0;t<this.size;t++)e[t]=this.array[(this.first+t)%this.size];this.first=0,this.array=e}if(this.array[this.getArrayIdx(this.size)]=t,++this.size,this.priorityQueue&&1<this.size)for(let t=this.size-1;0<t;--t){var i=this.getArrayIdx(t),s=this.getArrayIdx(t-1);if(!this.elemComperator(this.array[i],this.array[s]))break;[this.array[i],this.array[s]]=[this.array[s],this.array[i]]}}pop(){if(0===this.size)return null;this.size--;var t=this.array[this.first];return this.first=(this.first+1)%this.array.length,t}clear(){this.size=0,this.first=0}}},{}],20:[function(t,e,i){"use strict";var s=t("./animation");const d=t("./utils"),a=t("./queue");class r extends s{constructor(t,e,i,s=12,a="A*",r="random",h=1,n=!0,o="random",l=!1){super(t,e,i,"finding the shortest path","shortest-path.js",`
Animation showing process of finding the shortest path
in the grid world by BFS or A* algorithm.

Coded with no external dependencies, using only canvas API.
`),this.cellSize=s,this.speed=h,this.startNewAfterFinish=n,this.showStats=l,this.searchAlgorithms=["BFS","A*"],this.searchAlgorithm=this.assignIfRandom(a,d.randomChoice(this.searchAlgorithms)),this.movementTypes=["4-dir","8-dir"],this.movementType=this.assignIfRandom(r,d.randomChoice(this.movementTypes)),this.cellStyles=["sharp","rounded"],this.cellStyle=this.assignIfRandom(o,d.randomChoice(this.cellStyles)),this.updateName(),this.queue=null,this.visited=0,this.mapWidth=0,this.mapHeight=0,this.map=null,this.dist=null,this.prev=null,this.pathLenght=0}updateName(){this.name=`finding the shortest path using ${this.searchAlgorithm} algorithm`}getIdx(t,e){return t+e*this.mapWidth}getXY(t){return d.createVec2d(t%this.mapWidth,Math.floor(t/this.mapWidth))}isWall(t,e){return t<0||t>=this.mapWidth||e<0||e>=this.mapHeight||1===this.map[this.getIdx(t,e)]}minDistance(t,e){var i=Math.abs(t.x-e.x),t=Math.abs(t.y-e.y);return"4-dir"===this.movementType?i+t:"8-dir"===this.movementType?(e=Math.min(i,t))*Math.sqrt(2)+i+t-2*e:0}expandNextNode(){var e=this.queue.pop();if(null!==e){++this.visited;var i,s=e.key,a=this.getXY(s),e=this.map[s];this.pathLenght=Math.max(this.pathLenght,this.dist[s]);let t=[];if("4-dir"===this.movementType&&(t=[this.getIdx(a.x-1,a.y),this.getIdx(a.x,a.y-1),this.getIdx(a.x+1,a.y),this.getIdx(a.x,a.y+1)]),"8-dir"===this.movementType&&(t=[this.getIdx(a.x-1,a.y),this.getIdx(a.x-1,a.y-1),this.getIdx(a.x,a.y-1),this.getIdx(a.x+1,a.y-1),this.getIdx(a.x+1,a.y),this.getIdx(a.x+1,a.y+1),this.getIdx(a.x,a.y+1),this.getIdx(a.x-1,a.y+1)]),2!==e&&3!==e)this.map[s]=5;else if(3===e){let t=this.prev[s];for(;0<=this.prev[t];)this.map[t]=6,t=this.prev[t];return this.pathLenght=this.dist[s],void this.queue.clear()}for(i of t){var r,h=this.map[i],n=this.getXY(i),o=this.dist[s]+this.minDistance(a,n);1!==h&&o<this.dist[i]&&("BFS"===this.searchAlgorithm?this.queue.push({key:i,value:o}):"A*"===this.searchAlgorithm&&(r=this.getXY(this.goalIdx),n=this.minDistance(n,r),this.queue.push({key:i,value:o+n})),3!==h&&(this.map[i]=4),this.dist[i]=o,this.prev[i]=s)}}}update(t){for(let t=0;t<this.speed;++t)this.expandNextNode(),++this.frame;this.startNewAfterFinish&&this.frame>=this.visited+300&&this.resize()}drawWallCell(t,e,i){var s,a,r,h,n,o,l;"sharp"===this.cellStyle?(s=this.isWall(t-1,e)?0:i,a=this.isWall(t+1,e)?0:i,r=this.isWall(t,e-1)?0:i,h=this.isWall(t,e+1)?0:i,this.ctx.fillRect(t*this.cellSize+s,e*this.cellSize+r,this.cellSize-s-a,this.cellSize-r-h)):"rounded"===this.cellStyle&&(this.ctx.beginPath(),this.ctx.arc(t*this.cellSize+this.cellSize/2,e*this.cellSize+this.cellSize/2,this.cellSize/2-i,0,2*Math.PI,!1),this.ctx.fill(),s=this.cellSize/2,a=t*this.cellSize,r=e*this.cellSize,h=(t+.5)*this.cellSize,n=(e+.5)*this.cellSize,o=(t+1)*this.cellSize,l=(e+1)*this.cellSize,this.isWall(t-1,e)&&this.ctx.fillRect(a,r+i,s,this.cellSize-2*i),this.isWall(t+1,e)&&this.ctx.fillRect(h,r+i,s,this.cellSize-2*i),this.isWall(t,e-1)&&this.ctx.fillRect(a+i,r,this.cellSize-2*i,s),this.isWall(t,e+1)&&this.ctx.fillRect(a+i,n,this.cellSize-2*i,s),this.isWall(t-1,e)&&this.isWall(t,e-1)&&(this.ctx.beginPath(),this.isWall(t-1,e-1)?this.ctx.rect(a,r,i,i):(this.ctx.arc(a,r,i,0,Math.PI/2,!1),this.ctx.lineTo(a+i,r+i),this.ctx.lineTo(a+i,r)),this.ctx.fill()),this.isWall(t-1,e)&&this.isWall(t,e+1)&&(this.ctx.beginPath(),this.isWall(t-1,e+1)?this.ctx.rect(a,l-i,i,i):(this.ctx.arc(a,l,i,1.5*Math.PI,0,!1),this.ctx.lineTo(a+i,l-i),this.ctx.lineTo(a,l-i)),this.ctx.fill()),this.isWall(t+1,e)&&this.isWall(t,e-1)&&(this.ctx.beginPath(),this.isWall(t+1,e-1)?this.ctx.rect(o-i,r,i,i):(this.ctx.arc(o,r,i,Math.PI/2,Math.PI,!1),this.ctx.lineTo(o-i,r+i),this.ctx.lineTo(o,r+i)),this.ctx.fill()),this.isWall(t+1,e))&&this.isWall(t,e+1)&&(this.ctx.beginPath(),this.isWall(t+1,e+1)?this.ctx.rect(o-i,l-i,i,i):(this.ctx.arc(o,l,i,Math.PI,1.5*Math.PI,!1),this.ctx.lineTo(o-i,l-i),this.ctx.lineTo(o-i,l)),this.ctx.fill())}drawNodeCell(t,e,i){var s;"sharp"===this.cellStyle?this.ctx.fillRect(t*this.cellSize+i,e*this.cellSize+i,this.cellSize-2*i,this.cellSize-2*i):"rounded"===this.cellStyle&&(this.ctx.beginPath(),this.ctx.arc(t*this.cellSize+this.cellSize/2,e*this.cellSize+this.cellSize/2,this.cellSize/2-i,0,2*Math.PI,!1),this.ctx.fill()),this.debug&&(this.ctx.fillStyle="black",i=this.getXY(this.goalIdx),i=d.round(this.minDistance({x:t,y:e},i),1),s=d.round(this.dist[this.getIdx(t,e)],1),this.ctx.fillText(s+"+"+i,t*this.cellSize,e*this.cellSize),this.ctx.fillText("="+d.round(s+i),t*this.cellSize,e*this.cellSize+20))}drawNodeConnection(t){var e=this.getXY(t),t=this.getXY(this.prev[t]);this.ctx.beginPath(),this.ctx.moveTo((e.x+.5)*this.cellSize,(e.y+.5)*this.cellSize),this.ctx.lineTo((t.x+.5)*this.cellSize,(t.y+.5)*this.cellSize),this.ctx.stroke()}draw(){this.clear();for(let e=0;e<this.mapHeight;++e)for(let t=0;t<this.mapWidth;++t){var i=this.getIdx(t,e),s=this.map[i];0<=[4,5,6,3].indexOf(s)&&0<=this.prev[i]&&(4===s?this.ctx.strokeStyle=this.colors[2]:5===s?this.ctx.strokeStyle=this.colors[1]:6!==s&&3!==s||(this.ctx.strokeStyle=this.colorsAlt[2]),this.drawNodeConnection(i))}for(let e=0;e<this.mapHeight;++e)for(let t=0;t<this.mapWidth;++t){var a=this.getIdx(t,e),a=this.map[a];1===a?(this.ctx.fillStyle=this.colors[0],this.drawWallCell(t,e,this.cellSize/6)):2===a?(this.ctx.fillStyle=this.colorsAlt[0],this.drawNodeCell(t,e,1)):3===a?(this.ctx.fillStyle=this.colorsAlt[1],this.drawNodeCell(t,e,1)):4===a?(this.ctx.fillStyle=this.colors[2],this.drawNodeCell(t,e,this.cellSize/3)):5===a?(this.ctx.fillStyle=this.colors[1],this.drawNodeCell(t,e,this.cellSize/4)):6===a&&(this.ctx.fillStyle=this.colorsAlt[2],this.drawNodeCell(t,e,this.cellSize/6))}var t;this.showStats&&(this.ctx.font="14px sans-serif",this.ctx.lineWidth=2,this.ctx.fillStyle=this.colors[0],this.ctx.strokeStyle=this.bgColor,d.fillAndStrokeText(this.ctx,"Search algorithm: "+this.searchAlgorithm,20,this.ctx.canvas.height-60),d.fillAndStrokeText(this.ctx,"Number of visited nodes: "+this.visited,20,this.ctx.canvas.height-40),t=0===this.queue.size?"Shortest path length: ":"Longest traveled path: ",t+=d.round(this.pathLenght),d.fillAndStrokeText(this.ctx,t,20,this.ctx.canvas.height-20))}recursiveMaze(e,i,s,a){var t=Math.floor(3),r=1-s/this.mapWidth,h=e+s,n=i+a,o=9<=s&&Math.random()>r*a/s,r=9<=a&&Math.random()>r;let l,c;if(o)for(;l=e+d.randomInt(t,s-t),1!==this.map[this.getIdx(l,i-1)]||this.map[1!==this.getIdx(l,n)];);else l=e-1;if(r)for(;c=i+d.randomInt(t,a-t),1!==this.map[this.getIdx(e-1,c)]||1!==this.map[this.getIdx(h,c)];);else c=n;if(o){for(let t=0;t<a;++t)this.map[this.getIdx(l,i+t)]=1;this.map[this.getIdx(l,d.randomInt(i,c))]=0,r&&(this.map[this.getIdx(l,d.randomInt(c+1,n))]=0),this.recursiveMaze(e,i,l-e,c-i),this.recursiveMaze(l+1,i,h-l-1,c-i)}if(r){for(let t=0;t<s;++t)this.map[this.getIdx(e+t,c)]=1;o&&(this.map[this.getIdx(d.randomInt(e,l),c)]=0),this.map[this.getIdx(d.randomInt(l+1,h),c)]=0,this.recursiveMaze(e,c+1,l-e,n-c-1),this.recursiveMaze(l+1,c+1,h-l-1,n-c-1)}}resize(){this.mapWidth=Math.ceil(this.ctx.canvas.width/this.cellSize),this.mapHeight=Math.ceil(this.ctx.canvas.height/this.cellSize),this.mapSize=this.mapWidth*this.mapHeight,this.map=new Array(this.mapSize),this.dist=new Array(this.mapSize),this.prev=new Array(this.mapSize);for(let e=0;e<this.mapHeight;++e)for(let t=0;t<this.mapWidth;++t){var i=this.getIdx(t,e);0===t||t===this.mapWidth-1||0===e||e===this.mapHeight-1?this.map[i]=1:this.map[i]=0,this.dist[i]=999999,this.prev[i]=-1}for(this.recursiveMaze(1,1,this.mapWidth-2,this.mapHeight-2),this.startIdx=0,this.goalIdx=0;1===this.map[this.startIdx];)this.startIdx=this.getIdx(d.randomInt(1,this.mapWidth-1),d.randomInt(1,this.mapHeight-1));for(var t=this.getXY(this.startIdx),e=(this.mapHeight+this.mapWidth)/6;1===this.map[this.goalIdx]||this.minDistance(this.getXY(this.goalIdx),t)<e;)this.goalIdx=this.getIdx(d.randomInt(1,this.mapWidth-1),d.randomInt(1,this.mapHeight-1));this.restart(),this.updateName()}restart(){this.frame=0,this.visited=0;for(let e=this.pathLenght=0;e<this.mapHeight;++e)for(let t=0;t<this.mapWidth;++t){var i=this.getIdx(t,e);1!==this.map[i]&&(this.map[i]=0,this.dist[i]=999999,this.prev[i]=-1)}this.map[this.startIdx]=2,this.dist[this.startIdx]=0,this.map[this.goalIdx]=3,this.priorityQueue="A*"===this.searchAlgorithm,this.queue=new a(this.mapSize,this.priorityQueue),this.queue.push({key:this.startIdx,value:0})}getSettings(){return[{prop:"searchAlgorithm",type:"select",values:this.searchAlgorithms,toCall:"restart"},{prop:"movementType",type:"select",values:this.movementTypes,toCall:"restart"},{prop:"cellSize",type:"int",min:8,max:48,toCall:"resize"},{prop:"speed",type:"int",min:1,max:64},{prop:"startNewAfterFinish",type:"bool"},{prop:"cellStyle",type:"select",values:this.cellStyles},{prop:"showStats",type:"bool"}]}}e.exports=r},{"./animation":2,"./queue":19,"./utils":25}],21:[function(t,e,i){"use strict";var s=t("./animation");const a=t("./utils");class r extends s{constructor(t,e,i,s=48,a=12,r=!1){super(t,e,i,"grid of sine waves","sine-waves.js",`
Grid of random sine waves.
The interesting "effects" for some waves is the artifact of drawing procedure
that draw lines between coordinates that are evenly distributed on the x-axis.

Coded with no external dependencies, using only canvas API.
`),this.cellSize=s,this.cellMargin=a,this.rotateCells=r,this.speed=.5,this.gridWidth=0,this.gridHeight=0,this.waves=[]}drawWave(e,i,s,a,r){this.ctx.beginPath(),this.ctx.moveTo(e-this.cellSize/2,i+Math.sin(r)*a);for(let t=0;t<this.cellSize;++t)this.ctx.lineTo(e-this.cellSize/2+t,i+Math.sin(t/this.cellSize*2*Math.PI*s+r)*a);this.ctx.stroke()}draw(){this.clear(),this.ctx.lineWidth=1,this.ctx.strokeStyle=this.colors[0];var e=this.gridCellsWidth*this.gridCellsHeight;this.rotateCells||this.ctx.translate(this.ctx.canvas.width/2,this.ctx.canvas.height/2);for(let t=0;t<e;++t){var i=this.cellMargin+t%this.gridCellsWidth*this.cellTotalSize-this.gridWidth/2+this.cellSize/2,s=this.cellMargin+Math.floor(t/this.gridCellsWidth)*this.cellTotalSize-this.gridHeight/2+this.cellSize/2,a=this.waves[t];this.ctx.strokeStyle=a.color,this.rotateCells?(this.ctx.translate(this.ctx.canvas.width/2,this.ctx.canvas.height/2),this.ctx.translate(i,s),this.ctx.rotate(2*a.rotation*Math.PI),this.drawWave(0,0,a.freq,this.cellSize*a.noise*.5,a.noise*Math.PI+this.time*Math.PI),this.ctx.resetTransform()):this.drawWave(i,s,a.freq,this.cellSize*a.noise*.5,a.noise*Math.PI+this.time*Math.PI)}this.rotateCells||this.ctx.resetTransform()}resize(){this.cellTotalSize=this.cellMargin+this.cellSize,this.gridCellsWidth=Math.floor((this.ctx.canvas.width-this.cellMargin)/this.cellTotalSize),this.gridCellsHeight=Math.floor((this.ctx.canvas.height-this.cellMargin)/this.cellTotalSize),this.gridWidth=this.cellMargin+this.gridCellsWidth*this.cellTotalSize,this.gridHeight=this.cellMargin+this.gridCellsHeight*this.cellTotalSize;var e=Math.max(0,this.gridWidth*this.gridHeight-this.waves.length);for(let t=0;t<e;++t)this.waves.push({freq:Math.pow(2,8*Math.random())*a.randomChoice([-1,1]),noise:Math.random(),rotation:Math.random(),color:a.randomChoice(this.colors)})}getSettings(){return[{prop:"cellSize",type:"int",min:16,max:256,toCall:"resize"},{prop:"cellMargin",type:"int",min:8,max:32,toCall:"resize"},{prop:"rotateCells",type:"bool"},{prop:"speed",type:"float",step:.1,min:-4,max:4}]}}e.exports=r},{"./animation":2,"./utils":25}],22:[function(t,e,i){"use strict";var s=t("./animation");const m=t("./utils");class r{constructor(){this.queue=[]}push(t){this.queue.push({step:t,time:0})}step(t){let e=!0;var i;return this.queue.length&&((i=this.queue[0]).time+=t,e=i.step(i.time))&&this.queue.shift(),e&&!this.queue.length}}class a{constructor(t,e){this.arr=t,this.moves=[],this.cmpCount=0,this.name=e,this.sort()}getName(){return this.name}comp(t,e,i){return e!==i&&(++this.cmpCount,this.moves.push(["cmp",t[e],t[i]])),t[e].val-t[i].val}compVal(t,e){return t!==e&&(++this.cmpCount,this.moves.push(["cmp",t,e])),t.val-e.val}swap(t,e,i){this.moves.push(["swap",[t[e],t[i]],[t[i],t[e]]]);var s=t[e];t[e]=t[i],t[i]=s}rearrange(e,i,s){var a=[],r=[];for(let t=0;t<i.length;++t)a.push(this.arr[i[t]]),r.push(this.arr[s[t]]);for(let t=0;t<i.length;++t)e[i[t]]=r[t];this.moves.push(["swap",r,a])}sort(){}getMoves(){return this.moves}}class c extends a{constructor(t){super(t,"bubble sort")}sort(){var s=this.arr.length;for(let i=0;i<s;++i){let e=!0;for(let t=0;t<s-1-i;++t)0<this.comp(this.arr,t,t+1)&&(this.swap(this.arr,t,t+1),e=!1);if(e)break}}}class d extends a{constructor(t){super(t,"selection sort")}sort(){var s=this.arr.length;for(let i=0;i<s;++i){let e=i;for(let t=i;t<s;++t)0<this.comp(this.arr,e,t)&&(e=t);i!==e&&this.swap(this.arr,i,e)}}}class p extends a{constructor(t){super(t,"insertion sort")}sort(){var t=this.arr.length;for(let e=1;e<t;++e){let t=e;for(;0<t&&this.comp(this.arr,t,t-1)<0;)this.swap(this.arr,t,t-1),--t}}}class u extends a{constructor(t){super(t,"merge sort")}sort(){this.mergeSort(0,this.arr.length-1)}mergeSort(t,e){var i;t<e&&(i=Math.floor((t+e)/2),this.mergeSort(t,i),this.mergeSort(i+1,e),this.merge(t,i,e))}merge(t,e,i){let s=t,a=e+1;if(!(this.comp(this.arr,e,a)<=0)){var r=[],h=[];for(let t=s;t<=i;++t)h.push(t);for(;s<=e&&a<=i;)this.comp(this.arr,s,a)<0?r.push(s++):r.push(a++);for(;s<=e;)r.push(s++);for(;a<=i;)r.push(a++);this.rearrange(this.arr,h,r)}}}class g extends a{constructor(t){super(t,"quick sort")}sort(){this.quickSort(0,this.arr.length-1)}quickSort(t,e){var i;1<=e-t&&(t<(i=this.partition(t,e))-1&&this.quickSort(t,i-1),i<e)&&this.quickSort(i,e)}partition(t,e){for(var i=this.arr[Math.floor((e+t)/2)];t<=e;){for(;this.compVal(this.arr[t],i)<0;)++t;for(;0<this.compVal(this.arr[e],i);)--e;t<=e&&this.swap(this.arr,t++,e--)}return t}}class f extends a{constructor(t){super(t,"heap sort")}sort(){for(let t=Math.floor((this.arr.length-1)/2);0<=t;--t)this.heapify(this.arr.length,t);for(let t=this.arr.length-1;0<t;--t)this.swap(this.arr,0,t),this.heapify(t,0)}heapify(t,e){let i=e,s=2*e+1,a=2*e+2;s<t&&0<this.comp(this.arr,s,i)&&(i=s),(i=a<t&&0<this.comp(this.arr,a,i)?a:i)!==e&&(this.swap(this.arr,e,i),this.heapify(t,i))}}class x extends a{constructor(t){super(t,"gnome sort")}sort(){var t=this.arr.length;let e=0;for(;e<t;)0===e||0<=this.comp(this.arr,e,e-1)?++e:(this.swap(this.arr,e,e-1),--e)}}class v extends a{constructor(t){super(t,"shaker sort")}sort(){var s=this.arr.length;for(let i=0;i<s-1;++i){let e=!0;for(let t=0;t<s-1-i;++t)0<this.comp(this.arr,t,t+1)&&(this.swap(this.arr,t,t+1),e=!1);if(e)break;e=!0;for(let t=s-2-i;t>i;--t)this.comp(this.arr,t,t-1)<0&&(this.swap(this.arr,t,t-1),e=!1);if(e)break}}}class h extends s{constructor(t,e,i,s="random",a=96,r=2,h=.25,n=.25,o=1,l=!1){super(t,e,i,"sorting algorithm visualization","sorting.js",`
Visualization of different sorting algorithms.

Coded with no external dependencies, using only canvas API.
`),this.numElements=a,this.elementPadding=r,this.cmpDuration=h,this.swapDuration=n,this.speed=o,this.showStats=l,this.sortAlgoNames=["selection sort","bubble sort","insertion sort","quick sort","merge sort","heap sort","gnome sort","shaker sort"],this.sortAlgoClasses=[d,c,p,g,u,f,x,v],this.sortingAlgorithm=this.assignIfRandom(s,m.randomChoice(this.sortAlgoNames)),this.initialOrderTypes=["random","sorted","reverse sorted","evens then odds"],this.initialOrder="random",this.cmpTotal=0,this.cmpCount=0,this.setup()}setup(){const i=this.numElements;this.animQueue=new r;let e=Array.from({length:i},(t,e)=>e+1);"random"===this.initialOrder?m.randomShuffle(e):"reverse sorted"===this.initialOrder?e=e.reverse():"evens then odds"===this.initialOrder&&(e=e.sort((t,e)=>t%2+t/(i+1)-(e%2+e/(i+1)))),this.elements=[];for(let t=0;t<i;++t){var s=e[t]/i,a=m.lerpColor(this.colors[0],this.colors[2],s);this.elements.push({val:s,pos:t,color:a,z:0})}var t=new this.sortAlgoClasses[this.sortAlgoNames.indexOf(this.sortingAlgorithm)](this.elements);this.moves=t.getMoves(),this.name=t.getName()+" algorithm visualization",this.cmpTotal=t.cmpCount,this.cmpCount=0}update(t){if(t=t/1e3*this.speed,this.time+=t,++this.frame,this.animQueue.step(t)&&this.moves.length){t=this.moves[0];const h=t=>t<.5?m.easeInOutCubic(2*t):1-m.easeInOutCubic(2*t-1),n=m.easeInOutSine;if("cmp"===t[0]){++this.cmpCount;let i=t[1],s=t[2];const a=i.color,r=s.color,o=this.colorsAlt[3],l=this.cmpDuration;this.animQueue.push(function(t){var e=Math.min(t,l)/l;return i.color=m.lerpColor(a,o,h(e)),s.color=m.lerpColor(r,o,h(e)),t>=l})}else if("swap"===t[0]){let i=t[1],e=t[2],s=[],a=[],r=[];const c=this.colorsAlt[1],d=this.frame,p=this.swapDuration*i.length;for(let t=0;t<i.length;++t)s.push(i[t].pos),a.push(e[t].pos),r.push(i[t].color);this.animQueue.push(function(t){var e=Math.min(t,p)/p;for(let t=0;t<i.length;++t)i[t].z=d,i[t].color=m.lerpColor(r[t],c,h(e)),i[t].pos=m.lerp(s[t],a[t],n(e));return t>=p})}this.moves.shift()}}draw(){this.clear();var t,e=this.ctx.canvas.height,i=this.ctx.canvas.width/this.numElements;this.elements=this.elements.sort((t,e)=>t.z-e.z);for(t of this.elements){var s=t.pos*i+this.elementPadding/2,a=t.val*e;this.ctx.fillStyle=t.color,this.ctx.fillRect(s,0,i-this.elementPadding,a)}this.showStats&&(this.ctx.font="14px sans-serif",this.ctx.lineWidth=2,this.ctx.fillStyle=this.colors[0],this.ctx.strokeStyle=this.bgColor,m.fillAndStrokeText(this.ctx,"Sorting algorithm: "+this.sortingAlgorithm,20,e-60),m.fillAndStrokeText(this.ctx,"Number of elements: "+this.numElements,20,e-40),m.fillAndStrokeText(this.ctx,`Number of elements comparisons: ${this.cmpCount} / `+this.cmpTotal,20,e-20))}restart(){this.setup()}getSettings(){return[{prop:"initialOrder",type:"select",values:this.initialOrderTypes,toCall:"setup"},{prop:"sortingAlgorithm",type:"select",values:this.sortAlgoNames,toCall:"setup"},{prop:"numElements",type:"int",min:8,max:256,toCall:"setup"},{prop:"speed",type:"float",step:.25,min:.5,max:8},{prop:"showStats",type:"bool"}]}}e.exports=h},{"./animation":2,"./utils":25}],23:[function(t,e,i){"use strict";var s=t("./animation");const c=t("./utils");class a extends s{constructor(t,e,i,s=500,a=0,r=!1,h=1,n=1,o="random",l=!1){super(t,e,i,"shapes dancing in a circle","spinning-shapes.js",`
Shapes moving/"dancing" in a circle.
Based on: https://observablehq.com/@rreusser/instanced-webgl-circles
 
Coded with no external dependencies, using only canvas API.
`),this.shapeNames=["circles","points","lines","triangles","rectangles","pentagons","hexagons","heptagons","octagons"],this.vertices=this.assignIfRandom(a,c.randomInt(0,8)),this.updateName(),this.rotateShapes=r,this.shapes=s,this.distanceBase=.6,this.distanceRange=.2,this.sizeBase=.2,this.sizeRange=.12,this.scale=h,this.colorsScale=n,this.colorsShift=this.assignIfRandom(o,c.randomChoice([0,3.14])),this.rainbowColors=l}updateName(){this.name=this.shapeNames[this.vertices]+' "dancing" in a circle'}draw(){this.clear();var e=Math.max(this.ctx.canvas.width,this.ctx.canvas.height)/3*this.scale;this.ctx.translate(this.ctx.canvas.width/2,this.ctx.canvas.height/2);for(let t=0;t<this.shapes;++t){var i=t/this.shapes*2*Math.PI,s=(this.distanceBase+this.distanceRange*Math.cos(6*i+Math.cos(8*i+this.time/2)))*e,a=Math.cos(i)*s,s=Math.sin(i)*s,r=9*i-this.time,h=(this.sizeBase+this.sizeRange*Math.cos(r))*e,r=(Math.cos((r+this.colorsShift)*this.colorsScale)+1)/2;this.rainbowColors?this.ctx.strokeStyle=`hsl(${360*r}, 100%, 75%)`:this.ctx.strokeStyle=c.lerpColor(this.colorA,this.colorB,r),this.ctx.lineWidth=1,this.ctx.beginPath(),0===this.vertices&&c.pathCircle(this.ctx,a,s,h),1===this.vertices?c.pathCircle(this.ctx,a,s,1):c.pathPolygon(this.ctx,a,s,h,this.vertices,i*this.rotateShapes),this.ctx.stroke()}this.ctx.resetTransform()}getSettings(){return[{prop:"vertices",type:"int",min:0,max:8,toCall:"updateName"},{prop:"shapes",type:"int",min:0,max:2500},{prop:"rotateShapes",type:"bool"},{prop:"scale",type:"float",min:.05,max:1.95},{prop:"speed",type:"float",step:.1,min:-4,max:4},{prop:"colorsShift",type:"float",min:0,max:3.14},{prop:"colorsScale",type:"float",min:.05,max:2},{prop:"rainbowColors",type:"bool"}]}}e.exports=a},{"./animation":2,"./utils":25}],24:[function(t,e,i){"use strict";var s=t("./animation");const o=t("./utils");class a extends s{constructor(t,e,i,s=2500,a=2,r="random",h=!0,n=1){super(t,e,i,"spirograph","spirograph.js",`
Spirograph created with 1-5 random gears.
See: https://en.wikipedia.org/wiki/Spirograph,
and: http://www.eddaardvark.co.uk/v2/spirograph/spirograph2.html (this site is amazing).

Coded with no external dependencies, using only canvas API.
`),this.vertices=s,this.length=a,this.maxGears=5,this.rescaleToFit=h,this.scale=n,this.speed=1,this.gearCount=this.assignIfRandom(r,o.randomInt(2,this.maxGears)),this.gearNames=["zero","one","two","three","four","five"],this.updateName(),this.setup()}setup(){this.gears=[];for(let t=0;t<this.maxGears;++t)this.gears.push({radius:o.round(o.randomRange(0,100),2),rate:o.round(o.randomRange(-100,100),2),phase:.005*t})}updateName(){this.name="spirograph with "+this.gearNames[this.gearCount]+" random gears"}getXY(e,i,s=1){let a=0,r=0;for(let t=0;t<this.gearCount;++t){var h=this.gears[t];a+=h.radius*s*Math.cos(h.rate*(e+i*h.phase)),r+=h.radius*s*Math.sin(h.rate*(e+i*h.phase))}return{x:a,y:r}}draw(){this.clear();let i=1;if(this.rescaleToFit){let e=0;for(let t=0;t<this.gearCount;++t)e+=this.gears[t].radius;i=Math.min(this.ctx.canvas.width,this.ctx.canvas.height)/2/e}this.ctx.translate(this.ctx.canvas.width/2,this.ctx.canvas.height/2),this.ctx.scale(this.scale,this.scale);var e=Math.PI*this.length/this.vertices;let s=this.getXY(0,this.time,i);for(let t=1;t<this.vertices;++t){var a=this.getXY(t*e,this.time,i),r=o.lerpColor(this.colorA,this.colorB,t/this.vertices);o.drawLine(this.ctx,s.x,s.y,a.x,a.y,r,1),s=a}this.ctx.resetTransform()}getSettings(){let e=[{prop:"vertices",type:"int",min:100,max:1e4},{prop:"length",type:"float",step:.25,min:1,max:8},{prop:"gearCount",type:"int",min:1,max:this.maxGears,toCall:"updateName"},{prop:"rescaleToFit",type:"bool"},{prop:"scale",type:"float",min:.25,max:4},{prop:"speed",type:"float",step:.1,min:-4,max:4}];for(let t=0;t<this.maxGears;++t)e=e.concat([{prop:`gears[${t}].radius`,type:"float",step:.01,min:0,max:100},{prop:`gears[${t}].rate`,type:"float",step:.01,min:-100,max:100},{prop:`gears[${t}].phase`,type:"float",step:.001,min:-.1,max:.1}]);return e}}e.exports=a},{"./animation":2,"./utils":25}],25:[function(require,module,exports){"use strict";module.exports={randomRange(t,e){return Math.random()*(e-t)+t},randomInt(t,e){return Math.floor(this.randomRange(t,e))},randomChoice(t){return t[Math.floor(Math.random()*t.length)]},randomBoxMuller(){return Math.sqrt(-2*Math.log(1-Math.random()))*Math.cos(2*Math.PI*Math.random())},randomArray(t,e,i){return Array(t).fill().map(()=>this.randomRange(e,i))},randomShuffle(e){for(let t=e.length-1;0<t;--t){var i=Math.floor(Math.random()*(t+1)),s=e[t];e[t]=e[i],e[i]=s}},round(t,e=2){e=Math.pow(10,e);return Math.round(t*e)/e},addArrays(t,i){return t.map((t,e)=>t+i[e])},subArrays(t,i){return t.map((t,e)=>t-i[e])},mulArrays(t,i){return t.map((t,e)=>t*i[e])},clip(t,e,i){return Math.max(e,Math.min(i,t))},remap(t,e,i,s,a){return s+(t-e)/(i-e)*(a-s)},sum(t){let e=0;for(var i of t)e+=a;return e},lerp(t,e,i){return(1-i)*t+i*e},lerpColor(t,e,i){var t=parseInt(t.replace("#","0x"),16),s=t>>16,a=t>>8&255,t=255&t,e=parseInt(e.replace("#","0x"),16);return"#"+((1<<24)+(s+i*((e>>16)-s)<<16)+(a+i*((e>>8&255)-a)<<8)+(t+i*((255&e)-t))|0).toString(16).slice(1)},lerpColorsPallet(t,e){var i=1/(t.length-1),s=Math.floor(e/i);return this.lerpColor(t[s%t.length],t[(s+1)%t.length],(e-s*i)/i)},createVec2d(t,e){return{x:t,y:e}},rotateVec2d(t,e){var i=Math.cos(e),e=Math.sin(e);return{x:t.x*i-t.y*e,y:t.x*e+t.y*i}},mulVec2d(t,e){return{x:t.x*e,y:t.x*e}},distVec2d(t,e){return Math.sqrt(Math.pow(t.x-e.x,2)+Math.pow(t.y-e.y,2))},easeInSine(t){return 1-Math.cos(t*Math.PI/2)},easeOutSine(t){return Math.sin(t*Math.PI/2)},easeInOutSine(t){return-(Math.cos(Math.PI*t)-1)/2},easeInQuad(t){return t*t},easeOutQuad(t){return 1-(1-t)*(1-t)},easeInOutQuad(t){return t<.5?2*t*t:1-Math.pow(-2*t+2,2)/2},easeInCubic(t){return t*t*t},easeOutCubic(t){return 1-Math.pow(1-t,3)},easeInOutCubic(t){return t<.5?4*t*t*t:1-Math.pow(-2*t+2,3)/2},easeInQuart(t){return t*t*t*t},easeOutQuart(t){return 1-Math.pow(1-t,4)},easeInOutQuart(t){return t<.5?8*t*t*t*t:1-Math.pow(-2*t+2,4)/2},clear(t,e){t.fillStyle=e,t.fillRect(0,0,t.canvas.width,t.canvas.height)},pathLine(t,e,i,s,a){t.moveTo(e,i),t.lineTo(s,a)},drawLine(t,e,i,s,a,r,h=1){t.lineWidth=h,t.strokeStyle=r,t.beginPath(),t.moveTo(e,i),t.lineTo(s,a),t.stroke()},pathPolygon(e,i,s,a,r,h=0){var n=2*Math.PI/r;e.moveTo(i+a*Math.cos(h),s+a*Math.sin(h));for(let t=1;t<=r;t++)e.lineTo(i+a*Math.cos(h+t*n),s+a*Math.sin(h+t*n))},pathCircle(t,e,i,s){t.moveTo(e+s,i),t.arc(e,i,s,0,2*Math.PI,!1)},fillCircle(t,e,i,s,a){t.fillStyle=a,t.beginPath(),t.arc(e,i,s,0,2*Math.PI,!1),t.fill()},strokeCircle(t,e,i,s,a){t.strokeStyle=a,t.beginPath(),t.arc(e,i,s,0,2*Math.PI,!1),t.stroke()},fillAndStrokeText(t,e,i,s){t.strokeText(e,i,s),t.fillText(e,i,s)},pathShape(e,i){if(i.length)if(i[0].hasOwnProperty("x")&&i[0].hasOwnProperty("y")){e.moveTo(i[0].x,i[0].y);for(let t=1;t<i.length;++t)e.lineTo(i[t].x,i[t].y)}else{e.moveTo(i[0][0],i[0][1]);for(let t=1;t<i.length;++t)e.lineTo(i[t][0],i[t][1])}},pathClosedShape(t,e){e.length&&this.pathShape(t,e.concat([e[0]]))},blendColor(t,e,i=1,s="source-over"){t.save(),t.globalCompositeOperation=s,t.globalAlpha=i,t.fillStyle=e,t.fillRect(0,0,t.canvas.width,t.canvas.height),t.restore()},rgbToHex(t,e,i){return"#"+((1<<24)+(t<<16)+(e<<8)+i).toString(16).slice(1)},createOffscreenCanvas(t,e){var i=document.createElement("canvas");return i.width=t,i.height=e,i},isStrictMode(){return eval("var __temp = null"),"undefined"==typeof __temp?"strict":"non-strict"},getKeys(t){var e,i=[];for(e in t)i.push(e);return i},getValues(t){var e,i=[];for(e in t)i.push(t[e]);return i},addMultipleEventListener(e,t,i){t.forEach(t=>e.addEventListener(t,i))}}},{}]},{},[9]);